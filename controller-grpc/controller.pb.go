// Code generated by protoc-gen-go. DO NOT EDIT.
// source: controller.proto

package main

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	duration "github.com/golang/protobuf/ptypes/duration"
	timestamp "github.com/golang/protobuf/ptypes/timestamp"
	_ "google.golang.org/genproto/googleapis/api/annotations"
	field_mask "google.golang.org/genproto/protobuf/field_mask"
	grpc "google.golang.org/grpc"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type DeploymentStatus int32

const (
	DeploymentStatus_PENDING  DeploymentStatus = 0
	DeploymentStatus_FAILED   DeploymentStatus = 1
	DeploymentStatus_RUNNING  DeploymentStatus = 2
	DeploymentStatus_COMPLETE DeploymentStatus = 3
)

var DeploymentStatus_name = map[int32]string{
	0: "PENDING",
	1: "FAILED",
	2: "RUNNING",
	3: "COMPLETE",
}

var DeploymentStatus_value = map[string]int32{
	"PENDING":  0,
	"FAILED":   1,
	"RUNNING":  2,
	"COMPLETE": 3,
}

func (x DeploymentStatus) String() string {
	return proto.EnumName(DeploymentStatus_name, int32(x))
}

func (DeploymentStatus) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_ed7f10298fa1d90f, []int{0}
}

// See github.com/flynn/flynn/logaggregator/types StreamType
type LogAggregatorStreamType int32

const (
	LogAggregatorStreamType_STDOUT  LogAggregatorStreamType = 0
	LogAggregatorStreamType_STDERR  LogAggregatorStreamType = 1
	LogAggregatorStreamType_INIT    LogAggregatorStreamType = 2
	LogAggregatorStreamType_UNKNOWN LogAggregatorStreamType = 3
)

var LogAggregatorStreamType_name = map[int32]string{
	0: "STDOUT",
	1: "STDERR",
	2: "INIT",
	3: "UNKNOWN",
}

var LogAggregatorStreamType_value = map[string]int32{
	"STDOUT":  0,
	"STDERR":  1,
	"INIT":    2,
	"UNKNOWN": 3,
}

func (x LogAggregatorStreamType) String() string {
	return proto.EnumName(LogAggregatorStreamType_name, int32(x))
}

func (LogAggregatorStreamType) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_ed7f10298fa1d90f, []int{1}
}

// See github.com/flynn/flynn/logaggregator NewMessageFromSyslog
type LogAggregatorStreamSource int32

const (
	LogAggregatorStreamSource_APP LogAggregatorStreamSource = 0
)

var LogAggregatorStreamSource_name = map[int32]string{
	0: "APP",
}

var LogAggregatorStreamSource_value = map[string]int32{
	"APP": 0,
}

func (x LogAggregatorStreamSource) String() string {
	return proto.EnumName(LogAggregatorStreamSource_name, int32(x))
}

func (LogAggregatorStreamSource) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_ed7f10298fa1d90f, []int{2}
}

type Route_RouteType int32

const (
	Route_HTTP Route_RouteType = 0
	Route_TCP  Route_RouteType = 1
)

var Route_RouteType_name = map[int32]string{
	0: "HTTP",
	1: "TCP",
}

var Route_RouteType_value = map[string]int32{
	"HTTP": 0,
	"TCP":  1,
}

func (x Route_RouteType) String() string {
	return proto.EnumName(Route_RouteType_name, int32(x))
}

func (Route_RouteType) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_ed7f10298fa1d90f, []int{17, 0}
}

type DeploymentEvent_JobState int32

const (
	DeploymentEvent_PENDING  DeploymentEvent_JobState = 0
	DeploymentEvent_BLOCKED  DeploymentEvent_JobState = 1
	DeploymentEvent_STARTING DeploymentEvent_JobState = 2
	DeploymentEvent_UP       DeploymentEvent_JobState = 3
	DeploymentEvent_STOPPING DeploymentEvent_JobState = 5
	DeploymentEvent_DOWN     DeploymentEvent_JobState = 6
	// CRASHED and FAILURE are no longer valid job states,
	// but we still need to handle them in case they are set by old
	// schedulers still using the legacy code.
	DeploymentEvent_CRASHED DeploymentEvent_JobState = 7
	DeploymentEvent_FAILED  DeploymentEvent_JobState = 8
)

var DeploymentEvent_JobState_name = map[int32]string{
	0: "PENDING",
	1: "BLOCKED",
	2: "STARTING",
	3: "UP",
	5: "STOPPING",
	6: "DOWN",
	7: "CRASHED",
	8: "FAILED",
}

var DeploymentEvent_JobState_value = map[string]int32{
	"PENDING":  0,
	"BLOCKED":  1,
	"STARTING": 2,
	"UP":       3,
	"STOPPING": 5,
	"DOWN":     6,
	"CRASHED":  7,
	"FAILED":   8,
}

func (x DeploymentEvent_JobState) String() string {
	return proto.EnumName(DeploymentEvent_JobState_name, int32(x))
}

func (DeploymentEvent_JobState) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_ed7f10298fa1d90f, []int{22, 0}
}

type ListAppsRequest struct {
	PageSize             int32    `protobuf:"varint,1,opt,name=page_size,json=pageSize,proto3" json:"page_size,omitempty"`
	PageToken            string   `protobuf:"bytes,2,opt,name=page_token,json=pageToken,proto3" json:"page_token,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ListAppsRequest) Reset()         { *m = ListAppsRequest{} }
func (m *ListAppsRequest) String() string { return proto.CompactTextString(m) }
func (*ListAppsRequest) ProtoMessage()    {}
func (*ListAppsRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_ed7f10298fa1d90f, []int{0}
}

func (m *ListAppsRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ListAppsRequest.Unmarshal(m, b)
}
func (m *ListAppsRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ListAppsRequest.Marshal(b, m, deterministic)
}
func (m *ListAppsRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ListAppsRequest.Merge(m, src)
}
func (m *ListAppsRequest) XXX_Size() int {
	return xxx_messageInfo_ListAppsRequest.Size(m)
}
func (m *ListAppsRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_ListAppsRequest.DiscardUnknown(m)
}

var xxx_messageInfo_ListAppsRequest proto.InternalMessageInfo

func (m *ListAppsRequest) GetPageSize() int32 {
	if m != nil {
		return m.PageSize
	}
	return 0
}

func (m *ListAppsRequest) GetPageToken() string {
	if m != nil {
		return m.PageToken
	}
	return ""
}

type ListAppsResponse struct {
	Apps                 []*App   `protobuf:"bytes,1,rep,name=apps,proto3" json:"apps,omitempty"`
	NextPageToken        string   `protobuf:"bytes,2,opt,name=next_page_token,json=nextPageToken,proto3" json:"next_page_token,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ListAppsResponse) Reset()         { *m = ListAppsResponse{} }
func (m *ListAppsResponse) String() string { return proto.CompactTextString(m) }
func (*ListAppsResponse) ProtoMessage()    {}
func (*ListAppsResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_ed7f10298fa1d90f, []int{1}
}

func (m *ListAppsResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ListAppsResponse.Unmarshal(m, b)
}
func (m *ListAppsResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ListAppsResponse.Marshal(b, m, deterministic)
}
func (m *ListAppsResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ListAppsResponse.Merge(m, src)
}
func (m *ListAppsResponse) XXX_Size() int {
	return xxx_messageInfo_ListAppsResponse.Size(m)
}
func (m *ListAppsResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_ListAppsResponse.DiscardUnknown(m)
}

var xxx_messageInfo_ListAppsResponse proto.InternalMessageInfo

func (m *ListAppsResponse) GetApps() []*App {
	if m != nil {
		return m.Apps
	}
	return nil
}

func (m *ListAppsResponse) GetNextPageToken() string {
	if m != nil {
		return m.NextPageToken
	}
	return ""
}

type GetAppRequest struct {
	// name = "apps/APP_ID"
	Name                 string   `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetAppRequest) Reset()         { *m = GetAppRequest{} }
func (m *GetAppRequest) String() string { return proto.CompactTextString(m) }
func (*GetAppRequest) ProtoMessage()    {}
func (*GetAppRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_ed7f10298fa1d90f, []int{2}
}

func (m *GetAppRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetAppRequest.Unmarshal(m, b)
}
func (m *GetAppRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetAppRequest.Marshal(b, m, deterministic)
}
func (m *GetAppRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetAppRequest.Merge(m, src)
}
func (m *GetAppRequest) XXX_Size() int {
	return xxx_messageInfo_GetAppRequest.Size(m)
}
func (m *GetAppRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GetAppRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GetAppRequest proto.InternalMessageInfo

func (m *GetAppRequest) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

type UpdateAppRequest struct {
	App                  *App                  `protobuf:"bytes,1,opt,name=app,proto3" json:"app,omitempty"`
	UpdateMask           *field_mask.FieldMask `protobuf:"bytes,2,opt,name=update_mask,json=updateMask,proto3" json:"update_mask,omitempty"`
	XXX_NoUnkeyedLiteral struct{}              `json:"-"`
	XXX_unrecognized     []byte                `json:"-"`
	XXX_sizecache        int32                 `json:"-"`
}

func (m *UpdateAppRequest) Reset()         { *m = UpdateAppRequest{} }
func (m *UpdateAppRequest) String() string { return proto.CompactTextString(m) }
func (*UpdateAppRequest) ProtoMessage()    {}
func (*UpdateAppRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_ed7f10298fa1d90f, []int{3}
}

func (m *UpdateAppRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UpdateAppRequest.Unmarshal(m, b)
}
func (m *UpdateAppRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UpdateAppRequest.Marshal(b, m, deterministic)
}
func (m *UpdateAppRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UpdateAppRequest.Merge(m, src)
}
func (m *UpdateAppRequest) XXX_Size() int {
	return xxx_messageInfo_UpdateAppRequest.Size(m)
}
func (m *UpdateAppRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_UpdateAppRequest.DiscardUnknown(m)
}

var xxx_messageInfo_UpdateAppRequest proto.InternalMessageInfo

func (m *UpdateAppRequest) GetApp() *App {
	if m != nil {
		return m.App
	}
	return nil
}

func (m *UpdateAppRequest) GetUpdateMask() *field_mask.FieldMask {
	if m != nil {
		return m.UpdateMask
	}
	return nil
}

type ListReleasesRequest struct {
	PageSize             int32             `protobuf:"varint,1,opt,name=page_size,json=pageSize,proto3" json:"page_size,omitempty"`
	PageToken            string            `protobuf:"bytes,2,opt,name=page_token,json=pageToken,proto3" json:"page_token,omitempty"`
	Parent               string            `protobuf:"bytes,3,opt,name=parent,proto3" json:"parent,omitempty"`
	FilterLabels         map[string]string `protobuf:"bytes,4,rep,name=filter_labels,json=filterLabels,proto3" json:"filter_labels,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	XXX_NoUnkeyedLiteral struct{}          `json:"-"`
	XXX_unrecognized     []byte            `json:"-"`
	XXX_sizecache        int32             `json:"-"`
}

func (m *ListReleasesRequest) Reset()         { *m = ListReleasesRequest{} }
func (m *ListReleasesRequest) String() string { return proto.CompactTextString(m) }
func (*ListReleasesRequest) ProtoMessage()    {}
func (*ListReleasesRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_ed7f10298fa1d90f, []int{4}
}

func (m *ListReleasesRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ListReleasesRequest.Unmarshal(m, b)
}
func (m *ListReleasesRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ListReleasesRequest.Marshal(b, m, deterministic)
}
func (m *ListReleasesRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ListReleasesRequest.Merge(m, src)
}
func (m *ListReleasesRequest) XXX_Size() int {
	return xxx_messageInfo_ListReleasesRequest.Size(m)
}
func (m *ListReleasesRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_ListReleasesRequest.DiscardUnknown(m)
}

var xxx_messageInfo_ListReleasesRequest proto.InternalMessageInfo

func (m *ListReleasesRequest) GetPageSize() int32 {
	if m != nil {
		return m.PageSize
	}
	return 0
}

func (m *ListReleasesRequest) GetPageToken() string {
	if m != nil {
		return m.PageToken
	}
	return ""
}

func (m *ListReleasesRequest) GetParent() string {
	if m != nil {
		return m.Parent
	}
	return ""
}

func (m *ListReleasesRequest) GetFilterLabels() map[string]string {
	if m != nil {
		return m.FilterLabels
	}
	return nil
}

type ListReleasesResponse struct {
	Releases             []*Release `protobuf:"bytes,1,rep,name=releases,proto3" json:"releases,omitempty"`
	NextPageToken        string     `protobuf:"bytes,2,opt,name=next_page_token,json=nextPageToken,proto3" json:"next_page_token,omitempty"`
	XXX_NoUnkeyedLiteral struct{}   `json:"-"`
	XXX_unrecognized     []byte     `json:"-"`
	XXX_sizecache        int32      `json:"-"`
}

func (m *ListReleasesResponse) Reset()         { *m = ListReleasesResponse{} }
func (m *ListReleasesResponse) String() string { return proto.CompactTextString(m) }
func (*ListReleasesResponse) ProtoMessage()    {}
func (*ListReleasesResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_ed7f10298fa1d90f, []int{5}
}

func (m *ListReleasesResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ListReleasesResponse.Unmarshal(m, b)
}
func (m *ListReleasesResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ListReleasesResponse.Marshal(b, m, deterministic)
}
func (m *ListReleasesResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ListReleasesResponse.Merge(m, src)
}
func (m *ListReleasesResponse) XXX_Size() int {
	return xxx_messageInfo_ListReleasesResponse.Size(m)
}
func (m *ListReleasesResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_ListReleasesResponse.DiscardUnknown(m)
}

var xxx_messageInfo_ListReleasesResponse proto.InternalMessageInfo

func (m *ListReleasesResponse) GetReleases() []*Release {
	if m != nil {
		return m.Releases
	}
	return nil
}

func (m *ListReleasesResponse) GetNextPageToken() string {
	if m != nil {
		return m.NextPageToken
	}
	return ""
}

type GetReleaseRequest struct {
	// name = "apps/APP_ID/releases/RELEASE_ID"
	Name                 string   `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetReleaseRequest) Reset()         { *m = GetReleaseRequest{} }
func (m *GetReleaseRequest) String() string { return proto.CompactTextString(m) }
func (*GetReleaseRequest) ProtoMessage()    {}
func (*GetReleaseRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_ed7f10298fa1d90f, []int{6}
}

func (m *GetReleaseRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetReleaseRequest.Unmarshal(m, b)
}
func (m *GetReleaseRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetReleaseRequest.Marshal(b, m, deterministic)
}
func (m *GetReleaseRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetReleaseRequest.Merge(m, src)
}
func (m *GetReleaseRequest) XXX_Size() int {
	return xxx_messageInfo_GetReleaseRequest.Size(m)
}
func (m *GetReleaseRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GetReleaseRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GetReleaseRequest proto.InternalMessageInfo

func (m *GetReleaseRequest) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

type StreamAppLogRequest struct {
	// name = "apps/APP_ID"
	Name                 string                `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Opts                 *LogAggregatorLogOpts `protobuf:"bytes,2,opt,name=opts,proto3" json:"opts,omitempty"`
	XXX_NoUnkeyedLiteral struct{}              `json:"-"`
	XXX_unrecognized     []byte                `json:"-"`
	XXX_sizecache        int32                 `json:"-"`
}

func (m *StreamAppLogRequest) Reset()         { *m = StreamAppLogRequest{} }
func (m *StreamAppLogRequest) String() string { return proto.CompactTextString(m) }
func (*StreamAppLogRequest) ProtoMessage()    {}
func (*StreamAppLogRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_ed7f10298fa1d90f, []int{7}
}

func (m *StreamAppLogRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_StreamAppLogRequest.Unmarshal(m, b)
}
func (m *StreamAppLogRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_StreamAppLogRequest.Marshal(b, m, deterministic)
}
func (m *StreamAppLogRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_StreamAppLogRequest.Merge(m, src)
}
func (m *StreamAppLogRequest) XXX_Size() int {
	return xxx_messageInfo_StreamAppLogRequest.Size(m)
}
func (m *StreamAppLogRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_StreamAppLogRequest.DiscardUnknown(m)
}

var xxx_messageInfo_StreamAppLogRequest proto.InternalMessageInfo

func (m *StreamAppLogRequest) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *StreamAppLogRequest) GetOpts() *LogAggregatorLogOpts {
	if m != nil {
		return m.Opts
	}
	return nil
}

type CreateReleaseRequest struct {
	// parent = "apps/APP_ID"
	Parent               string   `protobuf:"bytes,1,opt,name=parent,proto3" json:"parent,omitempty"`
	Release              *Release `protobuf:"bytes,2,opt,name=release,proto3" json:"release,omitempty"`
	RequestId            string   `protobuf:"bytes,3,opt,name=request_id,json=requestId,proto3" json:"request_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CreateReleaseRequest) Reset()         { *m = CreateReleaseRequest{} }
func (m *CreateReleaseRequest) String() string { return proto.CompactTextString(m) }
func (*CreateReleaseRequest) ProtoMessage()    {}
func (*CreateReleaseRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_ed7f10298fa1d90f, []int{8}
}

func (m *CreateReleaseRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CreateReleaseRequest.Unmarshal(m, b)
}
func (m *CreateReleaseRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CreateReleaseRequest.Marshal(b, m, deterministic)
}
func (m *CreateReleaseRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CreateReleaseRequest.Merge(m, src)
}
func (m *CreateReleaseRequest) XXX_Size() int {
	return xxx_messageInfo_CreateReleaseRequest.Size(m)
}
func (m *CreateReleaseRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_CreateReleaseRequest.DiscardUnknown(m)
}

var xxx_messageInfo_CreateReleaseRequest proto.InternalMessageInfo

func (m *CreateReleaseRequest) GetParent() string {
	if m != nil {
		return m.Parent
	}
	return ""
}

func (m *CreateReleaseRequest) GetRelease() *Release {
	if m != nil {
		return m.Release
	}
	return nil
}

func (m *CreateReleaseRequest) GetRequestId() string {
	if m != nil {
		return m.RequestId
	}
	return ""
}

type CreateDeploymentRequest struct {
	// parent = "apps/APP_ID"
	Parent string `protobuf:"bytes,1,opt,name=parent,proto3" json:"parent,omitempty"`
	// release = Release.name
	Release              string   `protobuf:"bytes,2,opt,name=release,proto3" json:"release,omitempty"`
	RequestId            string   `protobuf:"bytes,3,opt,name=request_id,json=requestId,proto3" json:"request_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CreateDeploymentRequest) Reset()         { *m = CreateDeploymentRequest{} }
func (m *CreateDeploymentRequest) String() string { return proto.CompactTextString(m) }
func (*CreateDeploymentRequest) ProtoMessage()    {}
func (*CreateDeploymentRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_ed7f10298fa1d90f, []int{9}
}

func (m *CreateDeploymentRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CreateDeploymentRequest.Unmarshal(m, b)
}
func (m *CreateDeploymentRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CreateDeploymentRequest.Marshal(b, m, deterministic)
}
func (m *CreateDeploymentRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CreateDeploymentRequest.Merge(m, src)
}
func (m *CreateDeploymentRequest) XXX_Size() int {
	return xxx_messageInfo_CreateDeploymentRequest.Size(m)
}
func (m *CreateDeploymentRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_CreateDeploymentRequest.DiscardUnknown(m)
}

var xxx_messageInfo_CreateDeploymentRequest proto.InternalMessageInfo

func (m *CreateDeploymentRequest) GetParent() string {
	if m != nil {
		return m.Parent
	}
	return ""
}

func (m *CreateDeploymentRequest) GetRelease() string {
	if m != nil {
		return m.Release
	}
	return ""
}

func (m *CreateDeploymentRequest) GetRequestId() string {
	if m != nil {
		return m.RequestId
	}
	return ""
}

type StreamEventsRequest struct {
	// parent = "apps/APP_ID"
	Parent      string   `protobuf:"bytes,1,opt,name=parent,proto3" json:"parent,omitempty"`
	ObjectTypes []string `protobuf:"bytes,2,rep,name=object_types,json=objectTypes,proto3" json:"object_types,omitempty"`
	// name = any.name, maps to ObjectID
	Name                 string   `protobuf:"bytes,3,opt,name=name,proto3" json:"name,omitempty"`
	Past                 bool     `protobuf:"varint,4,opt,name=past,proto3" json:"past,omitempty"`
	Count                int32    `protobuf:"varint,5,opt,name=count,proto3" json:"count,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *StreamEventsRequest) Reset()         { *m = StreamEventsRequest{} }
func (m *StreamEventsRequest) String() string { return proto.CompactTextString(m) }
func (*StreamEventsRequest) ProtoMessage()    {}
func (*StreamEventsRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_ed7f10298fa1d90f, []int{10}
}

func (m *StreamEventsRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_StreamEventsRequest.Unmarshal(m, b)
}
func (m *StreamEventsRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_StreamEventsRequest.Marshal(b, m, deterministic)
}
func (m *StreamEventsRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_StreamEventsRequest.Merge(m, src)
}
func (m *StreamEventsRequest) XXX_Size() int {
	return xxx_messageInfo_StreamEventsRequest.Size(m)
}
func (m *StreamEventsRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_StreamEventsRequest.DiscardUnknown(m)
}

var xxx_messageInfo_StreamEventsRequest proto.InternalMessageInfo

func (m *StreamEventsRequest) GetParent() string {
	if m != nil {
		return m.Parent
	}
	return ""
}

func (m *StreamEventsRequest) GetObjectTypes() []string {
	if m != nil {
		return m.ObjectTypes
	}
	return nil
}

func (m *StreamEventsRequest) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *StreamEventsRequest) GetPast() bool {
	if m != nil {
		return m.Past
	}
	return false
}

func (m *StreamEventsRequest) GetCount() int32 {
	if m != nil {
		return m.Count
	}
	return 0
}

type App struct {
	// name = "apps/APP_ID"
	Name          string               `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	DisplayName   string               `protobuf:"bytes,2,opt,name=display_name,json=displayName,proto3" json:"display_name,omitempty"`
	Labels        map[string]string    `protobuf:"bytes,3,rep,name=labels,proto3" json:"labels,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	CreateTime    *timestamp.Timestamp `protobuf:"bytes,4,opt,name=create_time,json=createTime,proto3" json:"create_time,omitempty"`
	UpdateTime    *timestamp.Timestamp `protobuf:"bytes,5,opt,name=update_time,json=updateTime,proto3" json:"update_time,omitempty"`
	DeployTimeout int32                `protobuf:"varint,6,opt,name=deploy_timeout,json=deployTimeout,proto3" json:"deploy_timeout,omitempty"`
	Strategy      string               `protobuf:"bytes,7,opt,name=strategy,proto3" json:"strategy,omitempty"`
	// release = Release.name
	Release              string   `protobuf:"bytes,8,opt,name=release,proto3" json:"release,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *App) Reset()         { *m = App{} }
func (m *App) String() string { return proto.CompactTextString(m) }
func (*App) ProtoMessage()    {}
func (*App) Descriptor() ([]byte, []int) {
	return fileDescriptor_ed7f10298fa1d90f, []int{11}
}

func (m *App) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_App.Unmarshal(m, b)
}
func (m *App) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_App.Marshal(b, m, deterministic)
}
func (m *App) XXX_Merge(src proto.Message) {
	xxx_messageInfo_App.Merge(m, src)
}
func (m *App) XXX_Size() int {
	return xxx_messageInfo_App.Size(m)
}
func (m *App) XXX_DiscardUnknown() {
	xxx_messageInfo_App.DiscardUnknown(m)
}

var xxx_messageInfo_App proto.InternalMessageInfo

func (m *App) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *App) GetDisplayName() string {
	if m != nil {
		return m.DisplayName
	}
	return ""
}

func (m *App) GetLabels() map[string]string {
	if m != nil {
		return m.Labels
	}
	return nil
}

func (m *App) GetCreateTime() *timestamp.Timestamp {
	if m != nil {
		return m.CreateTime
	}
	return nil
}

func (m *App) GetUpdateTime() *timestamp.Timestamp {
	if m != nil {
		return m.UpdateTime
	}
	return nil
}

func (m *App) GetDeployTimeout() int32 {
	if m != nil {
		return m.DeployTimeout
	}
	return 0
}

func (m *App) GetStrategy() string {
	if m != nil {
		return m.Strategy
	}
	return ""
}

func (m *App) GetRelease() string {
	if m != nil {
		return m.Release
	}
	return ""
}

type Release struct {
	// name = "apps/APP_ID/releases/RELEASE_ID"
	Name                 string                  `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Artifacts            []string                `protobuf:"bytes,3,rep,name=artifacts,proto3" json:"artifacts,omitempty"`
	Env                  map[string]string       `protobuf:"bytes,4,rep,name=env,proto3" json:"env,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	Labels               map[string]string       `protobuf:"bytes,5,rep,name=labels,proto3" json:"labels,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	Processes            map[string]*ProcessType `protobuf:"bytes,6,rep,name=processes,proto3" json:"processes,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	CreateTime           *timestamp.Timestamp    `protobuf:"bytes,7,opt,name=create_time,json=createTime,proto3" json:"create_time,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                `json:"-"`
	XXX_unrecognized     []byte                  `json:"-"`
	XXX_sizecache        int32                   `json:"-"`
}

func (m *Release) Reset()         { *m = Release{} }
func (m *Release) String() string { return proto.CompactTextString(m) }
func (*Release) ProtoMessage()    {}
func (*Release) Descriptor() ([]byte, []int) {
	return fileDescriptor_ed7f10298fa1d90f, []int{12}
}

func (m *Release) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Release.Unmarshal(m, b)
}
func (m *Release) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Release.Marshal(b, m, deterministic)
}
func (m *Release) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Release.Merge(m, src)
}
func (m *Release) XXX_Size() int {
	return xxx_messageInfo_Release.Size(m)
}
func (m *Release) XXX_DiscardUnknown() {
	xxx_messageInfo_Release.DiscardUnknown(m)
}

var xxx_messageInfo_Release proto.InternalMessageInfo

func (m *Release) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *Release) GetArtifacts() []string {
	if m != nil {
		return m.Artifacts
	}
	return nil
}

func (m *Release) GetEnv() map[string]string {
	if m != nil {
		return m.Env
	}
	return nil
}

func (m *Release) GetLabels() map[string]string {
	if m != nil {
		return m.Labels
	}
	return nil
}

func (m *Release) GetProcesses() map[string]*ProcessType {
	if m != nil {
		return m.Processes
	}
	return nil
}

func (m *Release) GetCreateTime() *timestamp.Timestamp {
	if m != nil {
		return m.CreateTime
	}
	return nil
}

type AppRelease struct {
	PrevRelease          *Release `protobuf:"bytes,1,opt,name=prev_release,json=prevRelease,proto3" json:"prev_release,omitempty"`
	Release              *Release `protobuf:"bytes,2,opt,name=release,proto3" json:"release,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *AppRelease) Reset()         { *m = AppRelease{} }
func (m *AppRelease) String() string { return proto.CompactTextString(m) }
func (*AppRelease) ProtoMessage()    {}
func (*AppRelease) Descriptor() ([]byte, []int) {
	return fileDescriptor_ed7f10298fa1d90f, []int{13}
}

func (m *AppRelease) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_AppRelease.Unmarshal(m, b)
}
func (m *AppRelease) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_AppRelease.Marshal(b, m, deterministic)
}
func (m *AppRelease) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AppRelease.Merge(m, src)
}
func (m *AppRelease) XXX_Size() int {
	return xxx_messageInfo_AppRelease.Size(m)
}
func (m *AppRelease) XXX_DiscardUnknown() {
	xxx_messageInfo_AppRelease.DiscardUnknown(m)
}

var xxx_messageInfo_AppRelease proto.InternalMessageInfo

func (m *AppRelease) GetPrevRelease() *Release {
	if m != nil {
		return m.PrevRelease
	}
	return nil
}

func (m *AppRelease) GetRelease() *Release {
	if m != nil {
		return m.Release
	}
	return nil
}

type Deployment struct {
	// name = "apps/APP_ID/deployments/DEPLOYMENT_ID"
	Name string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	// old_release = Release.name
	OldRelease string `protobuf:"bytes,3,opt,name=old_release,json=oldRelease,proto3" json:"old_release,omitempty"`
	// new_release = Release.name
	NewRelease string           `protobuf:"bytes,4,opt,name=new_release,json=newRelease,proto3" json:"new_release,omitempty"`
	Strategy   string           `protobuf:"bytes,5,opt,name=strategy,proto3" json:"strategy,omitempty"`
	Status     DeploymentStatus `protobuf:"varint,6,opt,name=status,proto3,enum=controller.DeploymentStatus" json:"status,omitempty"`
	Processes  map[string]int32 `protobuf:"bytes,7,rep,name=processes,proto3" json:"processes,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"varint,2,opt,name=value,proto3"`
	// profobuf doesn't support maps within maps, so map[string]map[string]string
	// could not be reproduced
	Tags                 map[string]*DeploymentProcessTags `protobuf:"bytes,8,rep,name=tags,proto3" json:"tags,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	DeployTimeout        int32                             `protobuf:"varint,9,opt,name=deploy_timeout,json=deployTimeout,proto3" json:"deploy_timeout,omitempty"`
	CreateTime           *timestamp.Timestamp              `protobuf:"bytes,10,opt,name=create_time,json=createTime,proto3" json:"create_time,omitempty"`
	ExpireTime           *timestamp.Timestamp              `protobuf:"bytes,11,opt,name=expire_time,json=expireTime,proto3" json:"expire_time,omitempty"`
	EndTime              *timestamp.Timestamp              `protobuf:"bytes,12,opt,name=end_time,json=endTime,proto3" json:"end_time,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                          `json:"-"`
	XXX_unrecognized     []byte                            `json:"-"`
	XXX_sizecache        int32                             `json:"-"`
}

func (m *Deployment) Reset()         { *m = Deployment{} }
func (m *Deployment) String() string { return proto.CompactTextString(m) }
func (*Deployment) ProtoMessage()    {}
func (*Deployment) Descriptor() ([]byte, []int) {
	return fileDescriptor_ed7f10298fa1d90f, []int{14}
}

func (m *Deployment) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Deployment.Unmarshal(m, b)
}
func (m *Deployment) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Deployment.Marshal(b, m, deterministic)
}
func (m *Deployment) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Deployment.Merge(m, src)
}
func (m *Deployment) XXX_Size() int {
	return xxx_messageInfo_Deployment.Size(m)
}
func (m *Deployment) XXX_DiscardUnknown() {
	xxx_messageInfo_Deployment.DiscardUnknown(m)
}

var xxx_messageInfo_Deployment proto.InternalMessageInfo

func (m *Deployment) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *Deployment) GetOldRelease() string {
	if m != nil {
		return m.OldRelease
	}
	return ""
}

func (m *Deployment) GetNewRelease() string {
	if m != nil {
		return m.NewRelease
	}
	return ""
}

func (m *Deployment) GetStrategy() string {
	if m != nil {
		return m.Strategy
	}
	return ""
}

func (m *Deployment) GetStatus() DeploymentStatus {
	if m != nil {
		return m.Status
	}
	return DeploymentStatus_PENDING
}

func (m *Deployment) GetProcesses() map[string]int32 {
	if m != nil {
		return m.Processes
	}
	return nil
}

func (m *Deployment) GetTags() map[string]*DeploymentProcessTags {
	if m != nil {
		return m.Tags
	}
	return nil
}

func (m *Deployment) GetDeployTimeout() int32 {
	if m != nil {
		return m.DeployTimeout
	}
	return 0
}

func (m *Deployment) GetCreateTime() *timestamp.Timestamp {
	if m != nil {
		return m.CreateTime
	}
	return nil
}

func (m *Deployment) GetExpireTime() *timestamp.Timestamp {
	if m != nil {
		return m.ExpireTime
	}
	return nil
}

func (m *Deployment) GetEndTime() *timestamp.Timestamp {
	if m != nil {
		return m.EndTime
	}
	return nil
}

type DeploymentProcessTags struct {
	Tags                 map[string]string `protobuf:"bytes,1,rep,name=tags,proto3" json:"tags,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	XXX_NoUnkeyedLiteral struct{}          `json:"-"`
	XXX_unrecognized     []byte            `json:"-"`
	XXX_sizecache        int32             `json:"-"`
}

func (m *DeploymentProcessTags) Reset()         { *m = DeploymentProcessTags{} }
func (m *DeploymentProcessTags) String() string { return proto.CompactTextString(m) }
func (*DeploymentProcessTags) ProtoMessage()    {}
func (*DeploymentProcessTags) Descriptor() ([]byte, []int) {
	return fileDescriptor_ed7f10298fa1d90f, []int{15}
}

func (m *DeploymentProcessTags) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DeploymentProcessTags.Unmarshal(m, b)
}
func (m *DeploymentProcessTags) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DeploymentProcessTags.Marshal(b, m, deterministic)
}
func (m *DeploymentProcessTags) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DeploymentProcessTags.Merge(m, src)
}
func (m *DeploymentProcessTags) XXX_Size() int {
	return xxx_messageInfo_DeploymentProcessTags.Size(m)
}
func (m *DeploymentProcessTags) XXX_DiscardUnknown() {
	xxx_messageInfo_DeploymentProcessTags.DiscardUnknown(m)
}

var xxx_messageInfo_DeploymentProcessTags proto.InternalMessageInfo

func (m *DeploymentProcessTags) GetTags() map[string]string {
	if m != nil {
		return m.Tags
	}
	return nil
}

type Certificate struct {
	// name = "certificates/CERTIFICATE_ID"
	Name string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	// routes is a list of route names (e.g. "routes/ROUTE_ID")
	Routes []string `protobuf:"bytes,2,rep,name=routes,proto3" json:"routes,omitempty"`
	// cert is the optional TLS public certificate
	Cert string `protobuf:"bytes,3,opt,name=cert,proto3" json:"cert,omitempty"`
	// key is the optional TLS private key
	Key                  string               `protobuf:"bytes,4,opt,name=key,proto3" json:"key,omitempty"`
	CreateTime           *timestamp.Timestamp `protobuf:"bytes,5,opt,name=create_time,json=createTime,proto3" json:"create_time,omitempty"`
	UpdateTime           *timestamp.Timestamp `protobuf:"bytes,6,opt,name=update_time,json=updateTime,proto3" json:"update_time,omitempty"`
	XXX_NoUnkeyedLiteral struct{}             `json:"-"`
	XXX_unrecognized     []byte               `json:"-"`
	XXX_sizecache        int32                `json:"-"`
}

func (m *Certificate) Reset()         { *m = Certificate{} }
func (m *Certificate) String() string { return proto.CompactTextString(m) }
func (*Certificate) ProtoMessage()    {}
func (*Certificate) Descriptor() ([]byte, []int) {
	return fileDescriptor_ed7f10298fa1d90f, []int{16}
}

func (m *Certificate) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Certificate.Unmarshal(m, b)
}
func (m *Certificate) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Certificate.Marshal(b, m, deterministic)
}
func (m *Certificate) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Certificate.Merge(m, src)
}
func (m *Certificate) XXX_Size() int {
	return xxx_messageInfo_Certificate.Size(m)
}
func (m *Certificate) XXX_DiscardUnknown() {
	xxx_messageInfo_Certificate.DiscardUnknown(m)
}

var xxx_messageInfo_Certificate proto.InternalMessageInfo

func (m *Certificate) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *Certificate) GetRoutes() []string {
	if m != nil {
		return m.Routes
	}
	return nil
}

func (m *Certificate) GetCert() string {
	if m != nil {
		return m.Cert
	}
	return ""
}

func (m *Certificate) GetKey() string {
	if m != nil {
		return m.Key
	}
	return ""
}

func (m *Certificate) GetCreateTime() *timestamp.Timestamp {
	if m != nil {
		return m.CreateTime
	}
	return nil
}

func (m *Certificate) GetUpdateTime() *timestamp.Timestamp {
	if m != nil {
		return m.UpdateTime
	}
	return nil
}

type Route struct {
	// name = "routes/ROUTE_ID"
	Name string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	// parent = "apps/APP_ID"
	Parent string          `protobuf:"bytes,2,opt,name=parent,proto3" json:"parent,omitempty"`
	Type   Route_RouteType `protobuf:"varint,3,opt,name=type,proto3,enum=controller.Route_RouteType" json:"type,omitempty"`
	// service_name is the ID of the service.
	ServiceName string `protobuf:"bytes,4,opt,name=service_name,json=serviceName,proto3" json:"service_name,omitempty"`
	// port is the TCP port to listen on.
	Port int32 `protobuf:"varint,5,opt,name=port,proto3" json:"port,omitempty"`
	// leader is whether or not traffic should only be routed to the leader or
	// all instances
	Leader     bool                 `protobuf:"varint,6,opt,name=leader,proto3" json:"leader,omitempty"`
	CreateTime *timestamp.Timestamp `protobuf:"bytes,7,opt,name=create_time,json=createTime,proto3" json:"create_time,omitempty"`
	UpdateTime *timestamp.Timestamp `protobuf:"bytes,8,opt,name=update_time,json=updateTime,proto3" json:"update_time,omitempty"`
	// domain is the domain name of this Route. It is only used for HTTP routes.
	Domain string `protobuf:"bytes,9,opt,name=domain,proto3" json:"domain,omitempty"`
	// certificate contains TLSCert and TLSKey
	Certificate *Certificate `protobuf:"bytes,10,opt,name=certificate,proto3" json:"certificate,omitempty"`
	// sticky is whether or not to use sticky sessions for this route. It is only
	// used for HTTP routes.
	Sticky bool `protobuf:"varint,11,opt,name=sticky,proto3" json:"sticky,omitempty"`
	// path is the optional prefix to route to this service. It's exclusive with
	// the TLS options and can only be set if a "default" route with the same domain
	// and no path already exists in the route table.
	Path string `protobuf:"bytes,12,opt,name=path,proto3" json:"path,omitempty"`
	// drain_backends is whether or not to track requests and trigger
	// drain events on backend shutdown when all requests have completed
	// (used by the scheduler to only stop jobs once all requests have
	// completed).
	DrainBackends        bool     `protobuf:"varint,13,opt,name=drain_backends,json=drainBackends,proto3" json:"drain_backends,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Route) Reset()         { *m = Route{} }
func (m *Route) String() string { return proto.CompactTextString(m) }
func (*Route) ProtoMessage()    {}
func (*Route) Descriptor() ([]byte, []int) {
	return fileDescriptor_ed7f10298fa1d90f, []int{17}
}

func (m *Route) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Route.Unmarshal(m, b)
}
func (m *Route) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Route.Marshal(b, m, deterministic)
}
func (m *Route) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Route.Merge(m, src)
}
func (m *Route) XXX_Size() int {
	return xxx_messageInfo_Route.Size(m)
}
func (m *Route) XXX_DiscardUnknown() {
	xxx_messageInfo_Route.DiscardUnknown(m)
}

var xxx_messageInfo_Route proto.InternalMessageInfo

func (m *Route) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *Route) GetParent() string {
	if m != nil {
		return m.Parent
	}
	return ""
}

func (m *Route) GetType() Route_RouteType {
	if m != nil {
		return m.Type
	}
	return Route_HTTP
}

func (m *Route) GetServiceName() string {
	if m != nil {
		return m.ServiceName
	}
	return ""
}

func (m *Route) GetPort() int32 {
	if m != nil {
		return m.Port
	}
	return 0
}

func (m *Route) GetLeader() bool {
	if m != nil {
		return m.Leader
	}
	return false
}

func (m *Route) GetCreateTime() *timestamp.Timestamp {
	if m != nil {
		return m.CreateTime
	}
	return nil
}

func (m *Route) GetUpdateTime() *timestamp.Timestamp {
	if m != nil {
		return m.UpdateTime
	}
	return nil
}

func (m *Route) GetDomain() string {
	if m != nil {
		return m.Domain
	}
	return ""
}

func (m *Route) GetCertificate() *Certificate {
	if m != nil {
		return m.Certificate
	}
	return nil
}

func (m *Route) GetSticky() bool {
	if m != nil {
		return m.Sticky
	}
	return false
}

func (m *Route) GetPath() string {
	if m != nil {
		return m.Path
	}
	return ""
}

func (m *Route) GetDrainBackends() bool {
	if m != nil {
		return m.DrainBackends
	}
	return false
}

type Resource struct {
	// name = "providers/PROVIDER_ID/resources/RESOURCE_ID"
	Name                 string               `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	ExternalId           string               `protobuf:"bytes,2,opt,name=external_id,json=externalId,proto3" json:"external_id,omitempty"`
	Env                  map[string]string    `protobuf:"bytes,3,rep,name=env,proto3" json:"env,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	Apps                 []string             `protobuf:"bytes,4,rep,name=apps,proto3" json:"apps,omitempty"`
	CreateTime           *timestamp.Timestamp `protobuf:"bytes,5,opt,name=create_time,json=createTime,proto3" json:"create_time,omitempty"`
	XXX_NoUnkeyedLiteral struct{}             `json:"-"`
	XXX_unrecognized     []byte               `json:"-"`
	XXX_sizecache        int32                `json:"-"`
}

func (m *Resource) Reset()         { *m = Resource{} }
func (m *Resource) String() string { return proto.CompactTextString(m) }
func (*Resource) ProtoMessage()    {}
func (*Resource) Descriptor() ([]byte, []int) {
	return fileDescriptor_ed7f10298fa1d90f, []int{18}
}

func (m *Resource) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Resource.Unmarshal(m, b)
}
func (m *Resource) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Resource.Marshal(b, m, deterministic)
}
func (m *Resource) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Resource.Merge(m, src)
}
func (m *Resource) XXX_Size() int {
	return xxx_messageInfo_Resource.Size(m)
}
func (m *Resource) XXX_DiscardUnknown() {
	xxx_messageInfo_Resource.DiscardUnknown(m)
}

var xxx_messageInfo_Resource proto.InternalMessageInfo

func (m *Resource) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *Resource) GetExternalId() string {
	if m != nil {
		return m.ExternalId
	}
	return ""
}

func (m *Resource) GetEnv() map[string]string {
	if m != nil {
		return m.Env
	}
	return nil
}

func (m *Resource) GetApps() []string {
	if m != nil {
		return m.Apps
	}
	return nil
}

func (m *Resource) GetCreateTime() *timestamp.Timestamp {
	if m != nil {
		return m.CreateTime
	}
	return nil
}

type Job struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Job) Reset()         { *m = Job{} }
func (m *Job) String() string { return proto.CompactTextString(m) }
func (*Job) ProtoMessage()    {}
func (*Job) Descriptor() ([]byte, []int) {
	return fileDescriptor_ed7f10298fa1d90f, []int{19}
}

func (m *Job) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Job.Unmarshal(m, b)
}
func (m *Job) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Job.Marshal(b, m, deterministic)
}
func (m *Job) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Job.Merge(m, src)
}
func (m *Job) XXX_Size() int {
	return xxx_messageInfo_Job.Size(m)
}
func (m *Job) XXX_DiscardUnknown() {
	xxx_messageInfo_Job.DiscardUnknown(m)
}

var xxx_messageInfo_Job proto.InternalMessageInfo

type Event struct {
	// name = "events/EVENT_ID"
	Name string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	// parent = Any.name, corresponds to ObjectID on ct.Event
	Parent string `protobuf:"bytes,2,opt,name=parent,proto3" json:"parent,omitempty"`
	// type corresponds to ObjectType on ct.Event
	Type                 string                `protobuf:"bytes,3,opt,name=type,proto3" json:"type,omitempty"`
	Error                string                `protobuf:"bytes,4,opt,name=error,proto3" json:"error,omitempty"`
	CreateTime           *timestamp.Timestamp  `protobuf:"bytes,5,opt,name=create_time,json=createTime,proto3" json:"create_time,omitempty"`
	App                  *App                  `protobuf:"bytes,6,opt,name=app,proto3" json:"app,omitempty"`
	AppDeletion          *AppDeletion          `protobuf:"bytes,7,opt,name=app_deletion,json=appDeletion,proto3" json:"app_deletion,omitempty"`
	AppRelease           *AppRelease           `protobuf:"bytes,8,opt,name=app_release,json=appRelease,proto3" json:"app_release,omitempty"`
	DeploymentEvent      *DeploymentEvent      `protobuf:"bytes,9,opt,name=deployment_event,json=deploymentEvent,proto3" json:"deployment_event,omitempty"`
	Job                  *Job                  `protobuf:"bytes,10,opt,name=job,proto3" json:"job,omitempty"`
	ScaleRequest         *ScaleRequest         `protobuf:"bytes,11,opt,name=scale_request,json=scaleRequest,proto3" json:"scale_request,omitempty"`
	Release              *Release              `protobuf:"bytes,12,opt,name=release,proto3" json:"release,omitempty"`
	ReleaseDeletion      *ReleaseDeletion      `protobuf:"bytes,13,opt,name=release_deletion,json=releaseDeletion,proto3" json:"release_deletion,omitempty"`
	Artifact             *Artifact             `protobuf:"bytes,14,opt,name=artifact,proto3" json:"artifact,omitempty"`
	Provider             *Provider             `protobuf:"bytes,15,opt,name=provider,proto3" json:"provider,omitempty"`
	Resource             *Resource             `protobuf:"bytes,16,opt,name=resource,proto3" json:"resource,omitempty"`
	ResourceDeletion     *ResourceDeletion     `protobuf:"bytes,17,opt,name=resource_deletion,json=resourceDeletion,proto3" json:"resource_deletion,omitempty"`
	ResourceAppDeletion  *ResourceAppDeletion  `protobuf:"bytes,18,opt,name=resource_app_deletion,json=resourceAppDeletion,proto3" json:"resource_app_deletion,omitempty"`
	Route                *Route                `protobuf:"bytes,19,opt,name=route,proto3" json:"route,omitempty"`
	RouteDeletion        *RouteDeletion        `protobuf:"bytes,20,opt,name=route_deletion,json=routeDeletion,proto3" json:"route_deletion,omitempty"`
	DomainMigration      *DomainMigration      `protobuf:"bytes,21,opt,name=domain_migration,json=domainMigration,proto3" json:"domain_migration,omitempty"`
	ClusterBackup        *ClusterBackup        `protobuf:"bytes,22,opt,name=cluster_backup,json=clusterBackup,proto3" json:"cluster_backup,omitempty"`
	AppGarbageCollection *AppGarbageCollection `protobuf:"bytes,23,opt,name=app_garbage_collection,json=appGarbageCollection,proto3" json:"app_garbage_collection,omitempty"`
	Sink                 *Sink                 `protobuf:"bytes,24,opt,name=sink,proto3" json:"sink,omitempty"`
	SinkDeletion         *SinkDeletion         `protobuf:"bytes,25,opt,name=sink_deletion,json=sinkDeletion,proto3" json:"sink_deletion,omitempty"`
	Volume               *Volume               `protobuf:"bytes,26,opt,name=volume,proto3" json:"volume,omitempty"`
	XXX_NoUnkeyedLiteral struct{}              `json:"-"`
	XXX_unrecognized     []byte                `json:"-"`
	XXX_sizecache        int32                 `json:"-"`
}

func (m *Event) Reset()         { *m = Event{} }
func (m *Event) String() string { return proto.CompactTextString(m) }
func (*Event) ProtoMessage()    {}
func (*Event) Descriptor() ([]byte, []int) {
	return fileDescriptor_ed7f10298fa1d90f, []int{20}
}

func (m *Event) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Event.Unmarshal(m, b)
}
func (m *Event) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Event.Marshal(b, m, deterministic)
}
func (m *Event) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Event.Merge(m, src)
}
func (m *Event) XXX_Size() int {
	return xxx_messageInfo_Event.Size(m)
}
func (m *Event) XXX_DiscardUnknown() {
	xxx_messageInfo_Event.DiscardUnknown(m)
}

var xxx_messageInfo_Event proto.InternalMessageInfo

func (m *Event) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *Event) GetParent() string {
	if m != nil {
		return m.Parent
	}
	return ""
}

func (m *Event) GetType() string {
	if m != nil {
		return m.Type
	}
	return ""
}

func (m *Event) GetError() string {
	if m != nil {
		return m.Error
	}
	return ""
}

func (m *Event) GetCreateTime() *timestamp.Timestamp {
	if m != nil {
		return m.CreateTime
	}
	return nil
}

func (m *Event) GetApp() *App {
	if m != nil {
		return m.App
	}
	return nil
}

func (m *Event) GetAppDeletion() *AppDeletion {
	if m != nil {
		return m.AppDeletion
	}
	return nil
}

func (m *Event) GetAppRelease() *AppRelease {
	if m != nil {
		return m.AppRelease
	}
	return nil
}

func (m *Event) GetDeploymentEvent() *DeploymentEvent {
	if m != nil {
		return m.DeploymentEvent
	}
	return nil
}

func (m *Event) GetJob() *Job {
	if m != nil {
		return m.Job
	}
	return nil
}

func (m *Event) GetScaleRequest() *ScaleRequest {
	if m != nil {
		return m.ScaleRequest
	}
	return nil
}

func (m *Event) GetRelease() *Release {
	if m != nil {
		return m.Release
	}
	return nil
}

func (m *Event) GetReleaseDeletion() *ReleaseDeletion {
	if m != nil {
		return m.ReleaseDeletion
	}
	return nil
}

func (m *Event) GetArtifact() *Artifact {
	if m != nil {
		return m.Artifact
	}
	return nil
}

func (m *Event) GetProvider() *Provider {
	if m != nil {
		return m.Provider
	}
	return nil
}

func (m *Event) GetResource() *Resource {
	if m != nil {
		return m.Resource
	}
	return nil
}

func (m *Event) GetResourceDeletion() *ResourceDeletion {
	if m != nil {
		return m.ResourceDeletion
	}
	return nil
}

func (m *Event) GetResourceAppDeletion() *ResourceAppDeletion {
	if m != nil {
		return m.ResourceAppDeletion
	}
	return nil
}

func (m *Event) GetRoute() *Route {
	if m != nil {
		return m.Route
	}
	return nil
}

func (m *Event) GetRouteDeletion() *RouteDeletion {
	if m != nil {
		return m.RouteDeletion
	}
	return nil
}

func (m *Event) GetDomainMigration() *DomainMigration {
	if m != nil {
		return m.DomainMigration
	}
	return nil
}

func (m *Event) GetClusterBackup() *ClusterBackup {
	if m != nil {
		return m.ClusterBackup
	}
	return nil
}

func (m *Event) GetAppGarbageCollection() *AppGarbageCollection {
	if m != nil {
		return m.AppGarbageCollection
	}
	return nil
}

func (m *Event) GetSink() *Sink {
	if m != nil {
		return m.Sink
	}
	return nil
}

func (m *Event) GetSinkDeletion() *SinkDeletion {
	if m != nil {
		return m.SinkDeletion
	}
	return nil
}

func (m *Event) GetVolume() *Volume {
	if m != nil {
		return m.Volume
	}
	return nil
}

type AppDeletion struct {
	// name = "apps/APP_ID"
	Name                 string      `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	DeletedRoutes        []*Route    `protobuf:"bytes,2,rep,name=deleted_routes,json=deletedRoutes,proto3" json:"deleted_routes,omitempty"`
	DeletedResources     []*Resource `protobuf:"bytes,3,rep,name=deleted_resources,json=deletedResources,proto3" json:"deleted_resources,omitempty"`
	DeletedReleases      []*Release  `protobuf:"bytes,4,rep,name=deleted_releases,json=deletedReleases,proto3" json:"deleted_releases,omitempty"`
	XXX_NoUnkeyedLiteral struct{}    `json:"-"`
	XXX_unrecognized     []byte      `json:"-"`
	XXX_sizecache        int32       `json:"-"`
}

func (m *AppDeletion) Reset()         { *m = AppDeletion{} }
func (m *AppDeletion) String() string { return proto.CompactTextString(m) }
func (*AppDeletion) ProtoMessage()    {}
func (*AppDeletion) Descriptor() ([]byte, []int) {
	return fileDescriptor_ed7f10298fa1d90f, []int{21}
}

func (m *AppDeletion) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_AppDeletion.Unmarshal(m, b)
}
func (m *AppDeletion) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_AppDeletion.Marshal(b, m, deterministic)
}
func (m *AppDeletion) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AppDeletion.Merge(m, src)
}
func (m *AppDeletion) XXX_Size() int {
	return xxx_messageInfo_AppDeletion.Size(m)
}
func (m *AppDeletion) XXX_DiscardUnknown() {
	xxx_messageInfo_AppDeletion.DiscardUnknown(m)
}

var xxx_messageInfo_AppDeletion proto.InternalMessageInfo

func (m *AppDeletion) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *AppDeletion) GetDeletedRoutes() []*Route {
	if m != nil {
		return m.DeletedRoutes
	}
	return nil
}

func (m *AppDeletion) GetDeletedResources() []*Resource {
	if m != nil {
		return m.DeletedResources
	}
	return nil
}

func (m *AppDeletion) GetDeletedReleases() []*Release {
	if m != nil {
		return m.DeletedReleases
	}
	return nil
}

type DeploymentEvent struct {
	Deployment           *Deployment              `protobuf:"bytes,1,opt,name=deployment,proto3" json:"deployment,omitempty"`
	JobType              string                   `protobuf:"bytes,2,opt,name=job_type,json=jobType,proto3" json:"job_type,omitempty"`
	JobState             DeploymentEvent_JobState `protobuf:"varint,3,opt,name=job_state,json=jobState,proto3,enum=controller.DeploymentEvent_JobState" json:"job_state,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                 `json:"-"`
	XXX_unrecognized     []byte                   `json:"-"`
	XXX_sizecache        int32                    `json:"-"`
}

func (m *DeploymentEvent) Reset()         { *m = DeploymentEvent{} }
func (m *DeploymentEvent) String() string { return proto.CompactTextString(m) }
func (*DeploymentEvent) ProtoMessage()    {}
func (*DeploymentEvent) Descriptor() ([]byte, []int) {
	return fileDescriptor_ed7f10298fa1d90f, []int{22}
}

func (m *DeploymentEvent) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DeploymentEvent.Unmarshal(m, b)
}
func (m *DeploymentEvent) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DeploymentEvent.Marshal(b, m, deterministic)
}
func (m *DeploymentEvent) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DeploymentEvent.Merge(m, src)
}
func (m *DeploymentEvent) XXX_Size() int {
	return xxx_messageInfo_DeploymentEvent.Size(m)
}
func (m *DeploymentEvent) XXX_DiscardUnknown() {
	xxx_messageInfo_DeploymentEvent.DiscardUnknown(m)
}

var xxx_messageInfo_DeploymentEvent proto.InternalMessageInfo

func (m *DeploymentEvent) GetDeployment() *Deployment {
	if m != nil {
		return m.Deployment
	}
	return nil
}

func (m *DeploymentEvent) GetJobType() string {
	if m != nil {
		return m.JobType
	}
	return ""
}

func (m *DeploymentEvent) GetJobState() DeploymentEvent_JobState {
	if m != nil {
		return m.JobState
	}
	return DeploymentEvent_PENDING
}

type ScaleRequest struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ScaleRequest) Reset()         { *m = ScaleRequest{} }
func (m *ScaleRequest) String() string { return proto.CompactTextString(m) }
func (*ScaleRequest) ProtoMessage()    {}
func (*ScaleRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_ed7f10298fa1d90f, []int{23}
}

func (m *ScaleRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ScaleRequest.Unmarshal(m, b)
}
func (m *ScaleRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ScaleRequest.Marshal(b, m, deterministic)
}
func (m *ScaleRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ScaleRequest.Merge(m, src)
}
func (m *ScaleRequest) XXX_Size() int {
	return xxx_messageInfo_ScaleRequest.Size(m)
}
func (m *ScaleRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_ScaleRequest.DiscardUnknown(m)
}

var xxx_messageInfo_ScaleRequest proto.InternalMessageInfo

type ReleaseDeletion struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ReleaseDeletion) Reset()         { *m = ReleaseDeletion{} }
func (m *ReleaseDeletion) String() string { return proto.CompactTextString(m) }
func (*ReleaseDeletion) ProtoMessage()    {}
func (*ReleaseDeletion) Descriptor() ([]byte, []int) {
	return fileDescriptor_ed7f10298fa1d90f, []int{24}
}

func (m *ReleaseDeletion) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ReleaseDeletion.Unmarshal(m, b)
}
func (m *ReleaseDeletion) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ReleaseDeletion.Marshal(b, m, deterministic)
}
func (m *ReleaseDeletion) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ReleaseDeletion.Merge(m, src)
}
func (m *ReleaseDeletion) XXX_Size() int {
	return xxx_messageInfo_ReleaseDeletion.Size(m)
}
func (m *ReleaseDeletion) XXX_DiscardUnknown() {
	xxx_messageInfo_ReleaseDeletion.DiscardUnknown(m)
}

var xxx_messageInfo_ReleaseDeletion proto.InternalMessageInfo

type Artifact struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Artifact) Reset()         { *m = Artifact{} }
func (m *Artifact) String() string { return proto.CompactTextString(m) }
func (*Artifact) ProtoMessage()    {}
func (*Artifact) Descriptor() ([]byte, []int) {
	return fileDescriptor_ed7f10298fa1d90f, []int{25}
}

func (m *Artifact) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Artifact.Unmarshal(m, b)
}
func (m *Artifact) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Artifact.Marshal(b, m, deterministic)
}
func (m *Artifact) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Artifact.Merge(m, src)
}
func (m *Artifact) XXX_Size() int {
	return xxx_messageInfo_Artifact.Size(m)
}
func (m *Artifact) XXX_DiscardUnknown() {
	xxx_messageInfo_Artifact.DiscardUnknown(m)
}

var xxx_messageInfo_Artifact proto.InternalMessageInfo

type Provider struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Provider) Reset()         { *m = Provider{} }
func (m *Provider) String() string { return proto.CompactTextString(m) }
func (*Provider) ProtoMessage()    {}
func (*Provider) Descriptor() ([]byte, []int) {
	return fileDescriptor_ed7f10298fa1d90f, []int{26}
}

func (m *Provider) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Provider.Unmarshal(m, b)
}
func (m *Provider) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Provider.Marshal(b, m, deterministic)
}
func (m *Provider) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Provider.Merge(m, src)
}
func (m *Provider) XXX_Size() int {
	return xxx_messageInfo_Provider.Size(m)
}
func (m *Provider) XXX_DiscardUnknown() {
	xxx_messageInfo_Provider.DiscardUnknown(m)
}

var xxx_messageInfo_Provider proto.InternalMessageInfo

type ResourceDeletion struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ResourceDeletion) Reset()         { *m = ResourceDeletion{} }
func (m *ResourceDeletion) String() string { return proto.CompactTextString(m) }
func (*ResourceDeletion) ProtoMessage()    {}
func (*ResourceDeletion) Descriptor() ([]byte, []int) {
	return fileDescriptor_ed7f10298fa1d90f, []int{27}
}

func (m *ResourceDeletion) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ResourceDeletion.Unmarshal(m, b)
}
func (m *ResourceDeletion) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ResourceDeletion.Marshal(b, m, deterministic)
}
func (m *ResourceDeletion) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ResourceDeletion.Merge(m, src)
}
func (m *ResourceDeletion) XXX_Size() int {
	return xxx_messageInfo_ResourceDeletion.Size(m)
}
func (m *ResourceDeletion) XXX_DiscardUnknown() {
	xxx_messageInfo_ResourceDeletion.DiscardUnknown(m)
}

var xxx_messageInfo_ResourceDeletion proto.InternalMessageInfo

type ResourceAppDeletion struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ResourceAppDeletion) Reset()         { *m = ResourceAppDeletion{} }
func (m *ResourceAppDeletion) String() string { return proto.CompactTextString(m) }
func (*ResourceAppDeletion) ProtoMessage()    {}
func (*ResourceAppDeletion) Descriptor() ([]byte, []int) {
	return fileDescriptor_ed7f10298fa1d90f, []int{28}
}

func (m *ResourceAppDeletion) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ResourceAppDeletion.Unmarshal(m, b)
}
func (m *ResourceAppDeletion) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ResourceAppDeletion.Marshal(b, m, deterministic)
}
func (m *ResourceAppDeletion) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ResourceAppDeletion.Merge(m, src)
}
func (m *ResourceAppDeletion) XXX_Size() int {
	return xxx_messageInfo_ResourceAppDeletion.Size(m)
}
func (m *ResourceAppDeletion) XXX_DiscardUnknown() {
	xxx_messageInfo_ResourceAppDeletion.DiscardUnknown(m)
}

var xxx_messageInfo_ResourceAppDeletion proto.InternalMessageInfo

type RouteDeletion struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *RouteDeletion) Reset()         { *m = RouteDeletion{} }
func (m *RouteDeletion) String() string { return proto.CompactTextString(m) }
func (*RouteDeletion) ProtoMessage()    {}
func (*RouteDeletion) Descriptor() ([]byte, []int) {
	return fileDescriptor_ed7f10298fa1d90f, []int{29}
}

func (m *RouteDeletion) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RouteDeletion.Unmarshal(m, b)
}
func (m *RouteDeletion) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RouteDeletion.Marshal(b, m, deterministic)
}
func (m *RouteDeletion) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RouteDeletion.Merge(m, src)
}
func (m *RouteDeletion) XXX_Size() int {
	return xxx_messageInfo_RouteDeletion.Size(m)
}
func (m *RouteDeletion) XXX_DiscardUnknown() {
	xxx_messageInfo_RouteDeletion.DiscardUnknown(m)
}

var xxx_messageInfo_RouteDeletion proto.InternalMessageInfo

type DomainMigration struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DomainMigration) Reset()         { *m = DomainMigration{} }
func (m *DomainMigration) String() string { return proto.CompactTextString(m) }
func (*DomainMigration) ProtoMessage()    {}
func (*DomainMigration) Descriptor() ([]byte, []int) {
	return fileDescriptor_ed7f10298fa1d90f, []int{30}
}

func (m *DomainMigration) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DomainMigration.Unmarshal(m, b)
}
func (m *DomainMigration) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DomainMigration.Marshal(b, m, deterministic)
}
func (m *DomainMigration) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DomainMigration.Merge(m, src)
}
func (m *DomainMigration) XXX_Size() int {
	return xxx_messageInfo_DomainMigration.Size(m)
}
func (m *DomainMigration) XXX_DiscardUnknown() {
	xxx_messageInfo_DomainMigration.DiscardUnknown(m)
}

var xxx_messageInfo_DomainMigration proto.InternalMessageInfo

type ClusterBackup struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ClusterBackup) Reset()         { *m = ClusterBackup{} }
func (m *ClusterBackup) String() string { return proto.CompactTextString(m) }
func (*ClusterBackup) ProtoMessage()    {}
func (*ClusterBackup) Descriptor() ([]byte, []int) {
	return fileDescriptor_ed7f10298fa1d90f, []int{31}
}

func (m *ClusterBackup) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ClusterBackup.Unmarshal(m, b)
}
func (m *ClusterBackup) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ClusterBackup.Marshal(b, m, deterministic)
}
func (m *ClusterBackup) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ClusterBackup.Merge(m, src)
}
func (m *ClusterBackup) XXX_Size() int {
	return xxx_messageInfo_ClusterBackup.Size(m)
}
func (m *ClusterBackup) XXX_DiscardUnknown() {
	xxx_messageInfo_ClusterBackup.DiscardUnknown(m)
}

var xxx_messageInfo_ClusterBackup proto.InternalMessageInfo

type AppGarbageCollection struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *AppGarbageCollection) Reset()         { *m = AppGarbageCollection{} }
func (m *AppGarbageCollection) String() string { return proto.CompactTextString(m) }
func (*AppGarbageCollection) ProtoMessage()    {}
func (*AppGarbageCollection) Descriptor() ([]byte, []int) {
	return fileDescriptor_ed7f10298fa1d90f, []int{32}
}

func (m *AppGarbageCollection) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_AppGarbageCollection.Unmarshal(m, b)
}
func (m *AppGarbageCollection) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_AppGarbageCollection.Marshal(b, m, deterministic)
}
func (m *AppGarbageCollection) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AppGarbageCollection.Merge(m, src)
}
func (m *AppGarbageCollection) XXX_Size() int {
	return xxx_messageInfo_AppGarbageCollection.Size(m)
}
func (m *AppGarbageCollection) XXX_DiscardUnknown() {
	xxx_messageInfo_AppGarbageCollection.DiscardUnknown(m)
}

var xxx_messageInfo_AppGarbageCollection proto.InternalMessageInfo

type SinkDeletion struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SinkDeletion) Reset()         { *m = SinkDeletion{} }
func (m *SinkDeletion) String() string { return proto.CompactTextString(m) }
func (*SinkDeletion) ProtoMessage()    {}
func (*SinkDeletion) Descriptor() ([]byte, []int) {
	return fileDescriptor_ed7f10298fa1d90f, []int{33}
}

func (m *SinkDeletion) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SinkDeletion.Unmarshal(m, b)
}
func (m *SinkDeletion) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SinkDeletion.Marshal(b, m, deterministic)
}
func (m *SinkDeletion) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SinkDeletion.Merge(m, src)
}
func (m *SinkDeletion) XXX_Size() int {
	return xxx_messageInfo_SinkDeletion.Size(m)
}
func (m *SinkDeletion) XXX_DiscardUnknown() {
	xxx_messageInfo_SinkDeletion.DiscardUnknown(m)
}

var xxx_messageInfo_SinkDeletion proto.InternalMessageInfo

type Sink struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Sink) Reset()         { *m = Sink{} }
func (m *Sink) String() string { return proto.CompactTextString(m) }
func (*Sink) ProtoMessage()    {}
func (*Sink) Descriptor() ([]byte, []int) {
	return fileDescriptor_ed7f10298fa1d90f, []int{34}
}

func (m *Sink) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Sink.Unmarshal(m, b)
}
func (m *Sink) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Sink.Marshal(b, m, deterministic)
}
func (m *Sink) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Sink.Merge(m, src)
}
func (m *Sink) XXX_Size() int {
	return xxx_messageInfo_Sink.Size(m)
}
func (m *Sink) XXX_DiscardUnknown() {
	xxx_messageInfo_Sink.DiscardUnknown(m)
}

var xxx_messageInfo_Sink proto.InternalMessageInfo

type Volume struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Volume) Reset()         { *m = Volume{} }
func (m *Volume) String() string { return proto.CompactTextString(m) }
func (*Volume) ProtoMessage()    {}
func (*Volume) Descriptor() ([]byte, []int) {
	return fileDescriptor_ed7f10298fa1d90f, []int{35}
}

func (m *Volume) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Volume.Unmarshal(m, b)
}
func (m *Volume) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Volume.Marshal(b, m, deterministic)
}
func (m *Volume) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Volume.Merge(m, src)
}
func (m *Volume) XXX_Size() int {
	return xxx_messageInfo_Volume.Size(m)
}
func (m *Volume) XXX_DiscardUnknown() {
	xxx_messageInfo_Volume.DiscardUnknown(m)
}

var xxx_messageInfo_Volume proto.InternalMessageInfo

type ProcessType struct {
	Args                 []string                     `protobuf:"bytes,1,rep,name=args,proto3" json:"args,omitempty"`
	Env                  map[string]string            `protobuf:"bytes,2,rep,name=env,proto3" json:"env,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	Ports                []*Port                      `protobuf:"bytes,3,rep,name=ports,proto3" json:"ports,omitempty"`
	Volumes              []*VolumeReq                 `protobuf:"bytes,4,rep,name=volumes,proto3" json:"volumes,omitempty"`
	Omni                 bool                         `protobuf:"varint,5,opt,name=omni,proto3" json:"omni,omitempty"`
	HostNetwork          bool                         `protobuf:"varint,6,opt,name=host_network,json=hostNetwork,proto3" json:"host_network,omitempty"`
	HostPidNamespace     bool                         `protobuf:"varint,7,opt,name=host_pid_namespace,json=hostPidNamespace,proto3" json:"host_pid_namespace,omitempty"`
	Service              string                       `protobuf:"bytes,8,opt,name=service,proto3" json:"service,omitempty"`
	Resurrect            bool                         `protobuf:"varint,9,opt,name=resurrect,proto3" json:"resurrect,omitempty"`
	Resources            map[string]*HostResourceSpec `protobuf:"bytes,10,rep,name=resources,proto3" json:"resources,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	Mounts               []*HostMount                 `protobuf:"bytes,11,rep,name=mounts,proto3" json:"mounts,omitempty"`
	LinuxCapabilities    []string                     `protobuf:"bytes,12,rep,name=linux_capabilities,json=linuxCapabilities,proto3" json:"linux_capabilities,omitempty"`
	AllowedDevices       []*LibContainerDevice        `protobuf:"bytes,13,rep,name=allowed_devices,json=allowedDevices,proto3" json:"allowed_devices,omitempty"`
	WriteableCgroups     bool                         `protobuf:"varint,14,opt,name=writeable_cgroups,json=writeableCgroups,proto3" json:"writeable_cgroups,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                     `json:"-"`
	XXX_unrecognized     []byte                       `json:"-"`
	XXX_sizecache        int32                        `json:"-"`
}

func (m *ProcessType) Reset()         { *m = ProcessType{} }
func (m *ProcessType) String() string { return proto.CompactTextString(m) }
func (*ProcessType) ProtoMessage()    {}
func (*ProcessType) Descriptor() ([]byte, []int) {
	return fileDescriptor_ed7f10298fa1d90f, []int{36}
}

func (m *ProcessType) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ProcessType.Unmarshal(m, b)
}
func (m *ProcessType) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ProcessType.Marshal(b, m, deterministic)
}
func (m *ProcessType) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ProcessType.Merge(m, src)
}
func (m *ProcessType) XXX_Size() int {
	return xxx_messageInfo_ProcessType.Size(m)
}
func (m *ProcessType) XXX_DiscardUnknown() {
	xxx_messageInfo_ProcessType.DiscardUnknown(m)
}

var xxx_messageInfo_ProcessType proto.InternalMessageInfo

func (m *ProcessType) GetArgs() []string {
	if m != nil {
		return m.Args
	}
	return nil
}

func (m *ProcessType) GetEnv() map[string]string {
	if m != nil {
		return m.Env
	}
	return nil
}

func (m *ProcessType) GetPorts() []*Port {
	if m != nil {
		return m.Ports
	}
	return nil
}

func (m *ProcessType) GetVolumes() []*VolumeReq {
	if m != nil {
		return m.Volumes
	}
	return nil
}

func (m *ProcessType) GetOmni() bool {
	if m != nil {
		return m.Omni
	}
	return false
}

func (m *ProcessType) GetHostNetwork() bool {
	if m != nil {
		return m.HostNetwork
	}
	return false
}

func (m *ProcessType) GetHostPidNamespace() bool {
	if m != nil {
		return m.HostPidNamespace
	}
	return false
}

func (m *ProcessType) GetService() string {
	if m != nil {
		return m.Service
	}
	return ""
}

func (m *ProcessType) GetResurrect() bool {
	if m != nil {
		return m.Resurrect
	}
	return false
}

func (m *ProcessType) GetResources() map[string]*HostResourceSpec {
	if m != nil {
		return m.Resources
	}
	return nil
}

func (m *ProcessType) GetMounts() []*HostMount {
	if m != nil {
		return m.Mounts
	}
	return nil
}

func (m *ProcessType) GetLinuxCapabilities() []string {
	if m != nil {
		return m.LinuxCapabilities
	}
	return nil
}

func (m *ProcessType) GetAllowedDevices() []*LibContainerDevice {
	if m != nil {
		return m.AllowedDevices
	}
	return nil
}

func (m *ProcessType) GetWriteableCgroups() bool {
	if m != nil {
		return m.WriteableCgroups
	}
	return false
}

type Port struct {
	Port                 int32        `protobuf:"varint,1,opt,name=port,proto3" json:"port,omitempty"`
	Proto                string       `protobuf:"bytes,2,opt,name=proto,proto3" json:"proto,omitempty"`
	Service              *HostService `protobuf:"bytes,3,opt,name=service,proto3" json:"service,omitempty"`
	XXX_NoUnkeyedLiteral struct{}     `json:"-"`
	XXX_unrecognized     []byte       `json:"-"`
	XXX_sizecache        int32        `json:"-"`
}

func (m *Port) Reset()         { *m = Port{} }
func (m *Port) String() string { return proto.CompactTextString(m) }
func (*Port) ProtoMessage()    {}
func (*Port) Descriptor() ([]byte, []int) {
	return fileDescriptor_ed7f10298fa1d90f, []int{37}
}

func (m *Port) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Port.Unmarshal(m, b)
}
func (m *Port) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Port.Marshal(b, m, deterministic)
}
func (m *Port) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Port.Merge(m, src)
}
func (m *Port) XXX_Size() int {
	return xxx_messageInfo_Port.Size(m)
}
func (m *Port) XXX_DiscardUnknown() {
	xxx_messageInfo_Port.DiscardUnknown(m)
}

var xxx_messageInfo_Port proto.InternalMessageInfo

func (m *Port) GetPort() int32 {
	if m != nil {
		return m.Port
	}
	return 0
}

func (m *Port) GetProto() string {
	if m != nil {
		return m.Proto
	}
	return ""
}

func (m *Port) GetService() *HostService {
	if m != nil {
		return m.Service
	}
	return nil
}

type VolumeReq struct {
	Path                 string   `protobuf:"bytes,1,opt,name=path,proto3" json:"path,omitempty"`
	DeleteOnStop         bool     `protobuf:"varint,2,opt,name=delete_on_stop,json=deleteOnStop,proto3" json:"delete_on_stop,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *VolumeReq) Reset()         { *m = VolumeReq{} }
func (m *VolumeReq) String() string { return proto.CompactTextString(m) }
func (*VolumeReq) ProtoMessage()    {}
func (*VolumeReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_ed7f10298fa1d90f, []int{38}
}

func (m *VolumeReq) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_VolumeReq.Unmarshal(m, b)
}
func (m *VolumeReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_VolumeReq.Marshal(b, m, deterministic)
}
func (m *VolumeReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_VolumeReq.Merge(m, src)
}
func (m *VolumeReq) XXX_Size() int {
	return xxx_messageInfo_VolumeReq.Size(m)
}
func (m *VolumeReq) XXX_DiscardUnknown() {
	xxx_messageInfo_VolumeReq.DiscardUnknown(m)
}

var xxx_messageInfo_VolumeReq proto.InternalMessageInfo

func (m *VolumeReq) GetPath() string {
	if m != nil {
		return m.Path
	}
	return ""
}

func (m *VolumeReq) GetDeleteOnStop() bool {
	if m != nil {
		return m.DeleteOnStop
	}
	return false
}

// See github.com/flynn/flynn/host/types Mount
type HostService struct {
	DisplayName string `protobuf:"bytes,1,opt,name=display_name,json=displayName,proto3" json:"display_name,omitempty"`
	// Create the service in service discovery
	Create               bool             `protobuf:"varint,2,opt,name=create,proto3" json:"create,omitempty"`
	Check                *HostHealthCheck `protobuf:"bytes,3,opt,name=check,proto3" json:"check,omitempty"`
	XXX_NoUnkeyedLiteral struct{}         `json:"-"`
	XXX_unrecognized     []byte           `json:"-"`
	XXX_sizecache        int32            `json:"-"`
}

func (m *HostService) Reset()         { *m = HostService{} }
func (m *HostService) String() string { return proto.CompactTextString(m) }
func (*HostService) ProtoMessage()    {}
func (*HostService) Descriptor() ([]byte, []int) {
	return fileDescriptor_ed7f10298fa1d90f, []int{39}
}

func (m *HostService) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_HostService.Unmarshal(m, b)
}
func (m *HostService) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_HostService.Marshal(b, m, deterministic)
}
func (m *HostService) XXX_Merge(src proto.Message) {
	xxx_messageInfo_HostService.Merge(m, src)
}
func (m *HostService) XXX_Size() int {
	return xxx_messageInfo_HostService.Size(m)
}
func (m *HostService) XXX_DiscardUnknown() {
	xxx_messageInfo_HostService.DiscardUnknown(m)
}

var xxx_messageInfo_HostService proto.InternalMessageInfo

func (m *HostService) GetDisplayName() string {
	if m != nil {
		return m.DisplayName
	}
	return ""
}

func (m *HostService) GetCreate() bool {
	if m != nil {
		return m.Create
	}
	return false
}

func (m *HostService) GetCheck() *HostHealthCheck {
	if m != nil {
		return m.Check
	}
	return nil
}

// See github.com/flynn/flynn/host/types Mount
type HostHealthCheck struct {
	// Type is one of tcp, http, https
	Type string `protobuf:"bytes,1,opt,name=type,proto3" json:"type,omitempty"`
	// Interval is the time to wait between checks after the service has been
	// marked as up. It defaults to two seconds.
	Interval *duration.Duration `protobuf:"bytes,3,opt,name=interval,proto3" json:"interval,omitempty"`
	// Threshold is the number of consecutive checks of the same status before
	// a service will be marked as up or down after coming up for the first
	// time. It defaults to 2.
	Threshold int32 `protobuf:"varint,4,opt,name=threshold,proto3" json:"threshold,omitempty"`
	// If KillDown is true, the job will be killed if the service goes down (or
	// does not come up)
	KillDown bool `protobuf:"varint,5,opt,name=kill_down,json=killDown,proto3" json:"kill_down,omitempty"`
	// StartTimeout is the maximum duration that a service can take to come up
	// for the first time if KillDown is true. It defaults to ten seconds.
	StartTimeout *duration.Duration `protobuf:"bytes,6,opt,name=start_timeout,json=startTimeout,proto3" json:"start_timeout,omitempty"`
	// Extra optional config fields for http/https checks
	Path                 string   `protobuf:"bytes,7,opt,name=path,proto3" json:"path,omitempty"`
	Host                 string   `protobuf:"bytes,8,opt,name=host,proto3" json:"host,omitempty"`
	Match                string   `protobuf:"bytes,9,opt,name=match,proto3" json:"match,omitempty"`
	Status               int32    `protobuf:"varint,10,opt,name=status,proto3" json:"status,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *HostHealthCheck) Reset()         { *m = HostHealthCheck{} }
func (m *HostHealthCheck) String() string { return proto.CompactTextString(m) }
func (*HostHealthCheck) ProtoMessage()    {}
func (*HostHealthCheck) Descriptor() ([]byte, []int) {
	return fileDescriptor_ed7f10298fa1d90f, []int{40}
}

func (m *HostHealthCheck) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_HostHealthCheck.Unmarshal(m, b)
}
func (m *HostHealthCheck) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_HostHealthCheck.Marshal(b, m, deterministic)
}
func (m *HostHealthCheck) XXX_Merge(src proto.Message) {
	xxx_messageInfo_HostHealthCheck.Merge(m, src)
}
func (m *HostHealthCheck) XXX_Size() int {
	return xxx_messageInfo_HostHealthCheck.Size(m)
}
func (m *HostHealthCheck) XXX_DiscardUnknown() {
	xxx_messageInfo_HostHealthCheck.DiscardUnknown(m)
}

var xxx_messageInfo_HostHealthCheck proto.InternalMessageInfo

func (m *HostHealthCheck) GetType() string {
	if m != nil {
		return m.Type
	}
	return ""
}

func (m *HostHealthCheck) GetInterval() *duration.Duration {
	if m != nil {
		return m.Interval
	}
	return nil
}

func (m *HostHealthCheck) GetThreshold() int32 {
	if m != nil {
		return m.Threshold
	}
	return 0
}

func (m *HostHealthCheck) GetKillDown() bool {
	if m != nil {
		return m.KillDown
	}
	return false
}

func (m *HostHealthCheck) GetStartTimeout() *duration.Duration {
	if m != nil {
		return m.StartTimeout
	}
	return nil
}

func (m *HostHealthCheck) GetPath() string {
	if m != nil {
		return m.Path
	}
	return ""
}

func (m *HostHealthCheck) GetHost() string {
	if m != nil {
		return m.Host
	}
	return ""
}

func (m *HostHealthCheck) GetMatch() string {
	if m != nil {
		return m.Match
	}
	return ""
}

func (m *HostHealthCheck) GetStatus() int32 {
	if m != nil {
		return m.Status
	}
	return 0
}

// See github.com/flynn/flynn/host/resource Spec
type HostResourceSpec struct {
	// Request, if set, is the amount of resource a job expects to consume,
	// so the job should only be placed on a host with at least this amount
	// of resource available, and once scheduled this amount of resource
	// should then be unavailable on the given host.
	Request int64 `protobuf:"varint,1,opt,name=request,proto3" json:"request,omitempty"`
	// Limit, if set, is an upper limit on the amount of resource a job can
	// consume, the outcome of hitting this limit being implementation
	// defined (e.g. a system error, throttling, catchable / uncatchable
	// signals etc.)
	Limit                int64    `protobuf:"varint,2,opt,name=limit,proto3" json:"limit,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *HostResourceSpec) Reset()         { *m = HostResourceSpec{} }
func (m *HostResourceSpec) String() string { return proto.CompactTextString(m) }
func (*HostResourceSpec) ProtoMessage()    {}
func (*HostResourceSpec) Descriptor() ([]byte, []int) {
	return fileDescriptor_ed7f10298fa1d90f, []int{41}
}

func (m *HostResourceSpec) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_HostResourceSpec.Unmarshal(m, b)
}
func (m *HostResourceSpec) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_HostResourceSpec.Marshal(b, m, deterministic)
}
func (m *HostResourceSpec) XXX_Merge(src proto.Message) {
	xxx_messageInfo_HostResourceSpec.Merge(m, src)
}
func (m *HostResourceSpec) XXX_Size() int {
	return xxx_messageInfo_HostResourceSpec.Size(m)
}
func (m *HostResourceSpec) XXX_DiscardUnknown() {
	xxx_messageInfo_HostResourceSpec.DiscardUnknown(m)
}

var xxx_messageInfo_HostResourceSpec proto.InternalMessageInfo

func (m *HostResourceSpec) GetRequest() int64 {
	if m != nil {
		return m.Request
	}
	return 0
}

func (m *HostResourceSpec) GetLimit() int64 {
	if m != nil {
		return m.Limit
	}
	return 0
}

// See github.com/flynn/flynn/host/types Mount
type HostMount struct {
	Location             string   `protobuf:"bytes,1,opt,name=location,proto3" json:"location,omitempty"`
	Target               string   `protobuf:"bytes,2,opt,name=target,proto3" json:"target,omitempty"`
	Writable             bool     `protobuf:"varint,3,opt,name=writable,proto3" json:"writable,omitempty"`
	Device               string   `protobuf:"bytes,4,opt,name=device,proto3" json:"device,omitempty"`
	Data                 string   `protobuf:"bytes,5,opt,name=data,proto3" json:"data,omitempty"`
	Flags                int32    `protobuf:"varint,6,opt,name=flags,proto3" json:"flags,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *HostMount) Reset()         { *m = HostMount{} }
func (m *HostMount) String() string { return proto.CompactTextString(m) }
func (*HostMount) ProtoMessage()    {}
func (*HostMount) Descriptor() ([]byte, []int) {
	return fileDescriptor_ed7f10298fa1d90f, []int{42}
}

func (m *HostMount) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_HostMount.Unmarshal(m, b)
}
func (m *HostMount) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_HostMount.Marshal(b, m, deterministic)
}
func (m *HostMount) XXX_Merge(src proto.Message) {
	xxx_messageInfo_HostMount.Merge(m, src)
}
func (m *HostMount) XXX_Size() int {
	return xxx_messageInfo_HostMount.Size(m)
}
func (m *HostMount) XXX_DiscardUnknown() {
	xxx_messageInfo_HostMount.DiscardUnknown(m)
}

var xxx_messageInfo_HostMount proto.InternalMessageInfo

func (m *HostMount) GetLocation() string {
	if m != nil {
		return m.Location
	}
	return ""
}

func (m *HostMount) GetTarget() string {
	if m != nil {
		return m.Target
	}
	return ""
}

func (m *HostMount) GetWritable() bool {
	if m != nil {
		return m.Writable
	}
	return false
}

func (m *HostMount) GetDevice() string {
	if m != nil {
		return m.Device
	}
	return ""
}

func (m *HostMount) GetData() string {
	if m != nil {
		return m.Data
	}
	return ""
}

func (m *HostMount) GetFlags() int32 {
	if m != nil {
		return m.Flags
	}
	return 0
}

// See github.com/opencontainers/runc/libcontainer/configs Device
type LibContainerDevice struct {
	// Device type, block, char, etc.
	Type int32 `protobuf:"varint,1,opt,name=type,proto3" json:"type,omitempty"`
	// Path to the device.
	Path string `protobuf:"bytes,2,opt,name=path,proto3" json:"path,omitempty"`
	// Major is the device's major number.
	Major int64 `protobuf:"varint,3,opt,name=major,proto3" json:"major,omitempty"`
	// Minor is the device's minor number.
	Minor int64 `protobuf:"varint,4,opt,name=minor,proto3" json:"minor,omitempty"`
	// Cgroup permissions format, rwm.
	Permissions string `protobuf:"bytes,5,opt,name=permissions,proto3" json:"permissions,omitempty"`
	// FileMode permission bits for the device.
	FileMode uint32 `protobuf:"varint,6,opt,name=file_mode,json=fileMode,proto3" json:"file_mode,omitempty"`
	// Uid of the device.
	Uid uint32 `protobuf:"varint,7,opt,name=uid,proto3" json:"uid,omitempty"`
	// Gid of the device.
	Gid uint32 `protobuf:"varint,8,opt,name=gid,proto3" json:"gid,omitempty"`
	// Write the file to the allowed list
	Allow                bool     `protobuf:"varint,9,opt,name=allow,proto3" json:"allow,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *LibContainerDevice) Reset()         { *m = LibContainerDevice{} }
func (m *LibContainerDevice) String() string { return proto.CompactTextString(m) }
func (*LibContainerDevice) ProtoMessage()    {}
func (*LibContainerDevice) Descriptor() ([]byte, []int) {
	return fileDescriptor_ed7f10298fa1d90f, []int{43}
}

func (m *LibContainerDevice) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_LibContainerDevice.Unmarshal(m, b)
}
func (m *LibContainerDevice) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_LibContainerDevice.Marshal(b, m, deterministic)
}
func (m *LibContainerDevice) XXX_Merge(src proto.Message) {
	xxx_messageInfo_LibContainerDevice.Merge(m, src)
}
func (m *LibContainerDevice) XXX_Size() int {
	return xxx_messageInfo_LibContainerDevice.Size(m)
}
func (m *LibContainerDevice) XXX_DiscardUnknown() {
	xxx_messageInfo_LibContainerDevice.DiscardUnknown(m)
}

var xxx_messageInfo_LibContainerDevice proto.InternalMessageInfo

func (m *LibContainerDevice) GetType() int32 {
	if m != nil {
		return m.Type
	}
	return 0
}

func (m *LibContainerDevice) GetPath() string {
	if m != nil {
		return m.Path
	}
	return ""
}

func (m *LibContainerDevice) GetMajor() int64 {
	if m != nil {
		return m.Major
	}
	return 0
}

func (m *LibContainerDevice) GetMinor() int64 {
	if m != nil {
		return m.Minor
	}
	return 0
}

func (m *LibContainerDevice) GetPermissions() string {
	if m != nil {
		return m.Permissions
	}
	return ""
}

func (m *LibContainerDevice) GetFileMode() uint32 {
	if m != nil {
		return m.FileMode
	}
	return 0
}

func (m *LibContainerDevice) GetUid() uint32 {
	if m != nil {
		return m.Uid
	}
	return 0
}

func (m *LibContainerDevice) GetGid() uint32 {
	if m != nil {
		return m.Gid
	}
	return 0
}

func (m *LibContainerDevice) GetAllow() bool {
	if m != nil {
		return m.Allow
	}
	return false
}

// See github.com/flynn/flynn/logaggregator/client Message
type LogChunk struct {
	// host = "hosts/HOST_ID"
	// host is the host that the job was running on when this log message was
	// emitted.
	Host string `protobuf:"bytes,1,opt,name=host,proto3" json:"host,omitempty"`
	// job_id = "apps/APP_ID/jobs/JOB_ID"
	Job string `protobuf:"bytes,2,opt,name=job,proto3" json:"job,omitempty"`
	// msg is the actual content of this log message.
	Msg string `protobuf:"bytes,3,opt,name=msg,proto3" json:"msg,omitempty"`
	// process_type is the type of process that emitted this log message.
	ProcessType string `protobuf:"bytes,4,opt,name=process_type,json=processType,proto3" json:"process_type,omitempty"`
	// source is the source of this log message.
	Source LogAggregatorStreamSource `protobuf:"varint,5,opt,name=source,proto3,enum=controller.LogAggregatorStreamSource" json:"source,omitempty"`
	// stream is the I/O stream that emitted this message, such as "stdout" or
	// "stderr".
	Stream LogAggregatorStreamType `protobuf:"varint,6,opt,name=stream,proto3,enum=controller.LogAggregatorStreamType" json:"stream,omitempty"`
	// create_time is the time that this log line was emitted.
	CreateTime           *timestamp.Timestamp `protobuf:"bytes,7,opt,name=create_time,json=createTime,proto3" json:"create_time,omitempty"`
	XXX_NoUnkeyedLiteral struct{}             `json:"-"`
	XXX_unrecognized     []byte               `json:"-"`
	XXX_sizecache        int32                `json:"-"`
}

func (m *LogChunk) Reset()         { *m = LogChunk{} }
func (m *LogChunk) String() string { return proto.CompactTextString(m) }
func (*LogChunk) ProtoMessage()    {}
func (*LogChunk) Descriptor() ([]byte, []int) {
	return fileDescriptor_ed7f10298fa1d90f, []int{44}
}

func (m *LogChunk) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_LogChunk.Unmarshal(m, b)
}
func (m *LogChunk) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_LogChunk.Marshal(b, m, deterministic)
}
func (m *LogChunk) XXX_Merge(src proto.Message) {
	xxx_messageInfo_LogChunk.Merge(m, src)
}
func (m *LogChunk) XXX_Size() int {
	return xxx_messageInfo_LogChunk.Size(m)
}
func (m *LogChunk) XXX_DiscardUnknown() {
	xxx_messageInfo_LogChunk.DiscardUnknown(m)
}

var xxx_messageInfo_LogChunk proto.InternalMessageInfo

func (m *LogChunk) GetHost() string {
	if m != nil {
		return m.Host
	}
	return ""
}

func (m *LogChunk) GetJob() string {
	if m != nil {
		return m.Job
	}
	return ""
}

func (m *LogChunk) GetMsg() string {
	if m != nil {
		return m.Msg
	}
	return ""
}

func (m *LogChunk) GetProcessType() string {
	if m != nil {
		return m.ProcessType
	}
	return ""
}

func (m *LogChunk) GetSource() LogAggregatorStreamSource {
	if m != nil {
		return m.Source
	}
	return LogAggregatorStreamSource_APP
}

func (m *LogChunk) GetStream() LogAggregatorStreamType {
	if m != nil {
		return m.Stream
	}
	return LogAggregatorStreamType_STDOUT
}

func (m *LogChunk) GetCreateTime() *timestamp.Timestamp {
	if m != nil {
		return m.CreateTime
	}
	return nil
}

// See github.com/flynn/flynn/logaggregator/types LogOpts
type LogAggregatorLogOpts struct {
	Follow bool `protobuf:"varint,1,opt,name=follow,proto3" json:"follow,omitempty"`
	// job = "apps/APP_ID/jobs/JOB_ID"
	Job                  string                    `protobuf:"bytes,2,opt,name=job,proto3" json:"job,omitempty"`
	Lines                int32                     `protobuf:"varint,3,opt,name=lines,proto3" json:"lines,omitempty"`
	ProcessType          string                    `protobuf:"bytes,4,opt,name=process_type,json=processType,proto3" json:"process_type,omitempty"`
	StreamTypes          []LogAggregatorStreamType `protobuf:"varint,5,rep,packed,name=stream_types,json=streamTypes,proto3,enum=controller.LogAggregatorStreamType" json:"stream_types,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                  `json:"-"`
	XXX_unrecognized     []byte                    `json:"-"`
	XXX_sizecache        int32                     `json:"-"`
}

func (m *LogAggregatorLogOpts) Reset()         { *m = LogAggregatorLogOpts{} }
func (m *LogAggregatorLogOpts) String() string { return proto.CompactTextString(m) }
func (*LogAggregatorLogOpts) ProtoMessage()    {}
func (*LogAggregatorLogOpts) Descriptor() ([]byte, []int) {
	return fileDescriptor_ed7f10298fa1d90f, []int{45}
}

func (m *LogAggregatorLogOpts) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_LogAggregatorLogOpts.Unmarshal(m, b)
}
func (m *LogAggregatorLogOpts) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_LogAggregatorLogOpts.Marshal(b, m, deterministic)
}
func (m *LogAggregatorLogOpts) XXX_Merge(src proto.Message) {
	xxx_messageInfo_LogAggregatorLogOpts.Merge(m, src)
}
func (m *LogAggregatorLogOpts) XXX_Size() int {
	return xxx_messageInfo_LogAggregatorLogOpts.Size(m)
}
func (m *LogAggregatorLogOpts) XXX_DiscardUnknown() {
	xxx_messageInfo_LogAggregatorLogOpts.DiscardUnknown(m)
}

var xxx_messageInfo_LogAggregatorLogOpts proto.InternalMessageInfo

func (m *LogAggregatorLogOpts) GetFollow() bool {
	if m != nil {
		return m.Follow
	}
	return false
}

func (m *LogAggregatorLogOpts) GetJob() string {
	if m != nil {
		return m.Job
	}
	return ""
}

func (m *LogAggregatorLogOpts) GetLines() int32 {
	if m != nil {
		return m.Lines
	}
	return 0
}

func (m *LogAggregatorLogOpts) GetProcessType() string {
	if m != nil {
		return m.ProcessType
	}
	return ""
}

func (m *LogAggregatorLogOpts) GetStreamTypes() []LogAggregatorStreamType {
	if m != nil {
		return m.StreamTypes
	}
	return nil
}

func init() {
	proto.RegisterEnum("controller.DeploymentStatus", DeploymentStatus_name, DeploymentStatus_value)
	proto.RegisterEnum("controller.LogAggregatorStreamType", LogAggregatorStreamType_name, LogAggregatorStreamType_value)
	proto.RegisterEnum("controller.LogAggregatorStreamSource", LogAggregatorStreamSource_name, LogAggregatorStreamSource_value)
	proto.RegisterEnum("controller.Route_RouteType", Route_RouteType_name, Route_RouteType_value)
	proto.RegisterEnum("controller.DeploymentEvent_JobState", DeploymentEvent_JobState_name, DeploymentEvent_JobState_value)
	proto.RegisterType((*ListAppsRequest)(nil), "controller.ListAppsRequest")
	proto.RegisterType((*ListAppsResponse)(nil), "controller.ListAppsResponse")
	proto.RegisterType((*GetAppRequest)(nil), "controller.GetAppRequest")
	proto.RegisterType((*UpdateAppRequest)(nil), "controller.UpdateAppRequest")
	proto.RegisterType((*ListReleasesRequest)(nil), "controller.ListReleasesRequest")
	proto.RegisterMapType((map[string]string)(nil), "controller.ListReleasesRequest.FilterLabelsEntry")
	proto.RegisterType((*ListReleasesResponse)(nil), "controller.ListReleasesResponse")
	proto.RegisterType((*GetReleaseRequest)(nil), "controller.GetReleaseRequest")
	proto.RegisterType((*StreamAppLogRequest)(nil), "controller.StreamAppLogRequest")
	proto.RegisterType((*CreateReleaseRequest)(nil), "controller.CreateReleaseRequest")
	proto.RegisterType((*CreateDeploymentRequest)(nil), "controller.CreateDeploymentRequest")
	proto.RegisterType((*StreamEventsRequest)(nil), "controller.StreamEventsRequest")
	proto.RegisterType((*App)(nil), "controller.App")
	proto.RegisterMapType((map[string]string)(nil), "controller.App.LabelsEntry")
	proto.RegisterType((*Release)(nil), "controller.Release")
	proto.RegisterMapType((map[string]string)(nil), "controller.Release.EnvEntry")
	proto.RegisterMapType((map[string]string)(nil), "controller.Release.LabelsEntry")
	proto.RegisterMapType((map[string]*ProcessType)(nil), "controller.Release.ProcessesEntry")
	proto.RegisterType((*AppRelease)(nil), "controller.AppRelease")
	proto.RegisterType((*Deployment)(nil), "controller.Deployment")
	proto.RegisterMapType((map[string]int32)(nil), "controller.Deployment.ProcessesEntry")
	proto.RegisterMapType((map[string]*DeploymentProcessTags)(nil), "controller.Deployment.TagsEntry")
	proto.RegisterType((*DeploymentProcessTags)(nil), "controller.DeploymentProcessTags")
	proto.RegisterMapType((map[string]string)(nil), "controller.DeploymentProcessTags.TagsEntry")
	proto.RegisterType((*Certificate)(nil), "controller.Certificate")
	proto.RegisterType((*Route)(nil), "controller.Route")
	proto.RegisterType((*Resource)(nil), "controller.Resource")
	proto.RegisterMapType((map[string]string)(nil), "controller.Resource.EnvEntry")
	proto.RegisterType((*Job)(nil), "controller.Job")
	proto.RegisterType((*Event)(nil), "controller.Event")
	proto.RegisterType((*AppDeletion)(nil), "controller.AppDeletion")
	proto.RegisterType((*DeploymentEvent)(nil), "controller.DeploymentEvent")
	proto.RegisterType((*ScaleRequest)(nil), "controller.ScaleRequest")
	proto.RegisterType((*ReleaseDeletion)(nil), "controller.ReleaseDeletion")
	proto.RegisterType((*Artifact)(nil), "controller.Artifact")
	proto.RegisterType((*Provider)(nil), "controller.Provider")
	proto.RegisterType((*ResourceDeletion)(nil), "controller.ResourceDeletion")
	proto.RegisterType((*ResourceAppDeletion)(nil), "controller.ResourceAppDeletion")
	proto.RegisterType((*RouteDeletion)(nil), "controller.RouteDeletion")
	proto.RegisterType((*DomainMigration)(nil), "controller.DomainMigration")
	proto.RegisterType((*ClusterBackup)(nil), "controller.ClusterBackup")
	proto.RegisterType((*AppGarbageCollection)(nil), "controller.AppGarbageCollection")
	proto.RegisterType((*SinkDeletion)(nil), "controller.SinkDeletion")
	proto.RegisterType((*Sink)(nil), "controller.Sink")
	proto.RegisterType((*Volume)(nil), "controller.Volume")
	proto.RegisterType((*ProcessType)(nil), "controller.ProcessType")
	proto.RegisterMapType((map[string]string)(nil), "controller.ProcessType.EnvEntry")
	proto.RegisterMapType((map[string]*HostResourceSpec)(nil), "controller.ProcessType.ResourcesEntry")
	proto.RegisterType((*Port)(nil), "controller.Port")
	proto.RegisterType((*VolumeReq)(nil), "controller.VolumeReq")
	proto.RegisterType((*HostService)(nil), "controller.HostService")
	proto.RegisterType((*HostHealthCheck)(nil), "controller.HostHealthCheck")
	proto.RegisterType((*HostResourceSpec)(nil), "controller.HostResourceSpec")
	proto.RegisterType((*HostMount)(nil), "controller.HostMount")
	proto.RegisterType((*LibContainerDevice)(nil), "controller.LibContainerDevice")
	proto.RegisterType((*LogChunk)(nil), "controller.LogChunk")
	proto.RegisterType((*LogAggregatorLogOpts)(nil), "controller.LogAggregatorLogOpts")
}

func init() { proto.RegisterFile("controller.proto", fileDescriptor_ed7f10298fa1d90f) }

var fileDescriptor_ed7f10298fa1d90f = []byte{
	// 3256 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xac, 0x1a, 0xcb, 0x72, 0xdc, 0xc6,
	0xd1, 0xcb, 0x7d, 0x10, 0xdb, 0xbb, 0x4b, 0x82, 0x23, 0x8a, 0x5a, 0xad, 0x1e, 0xa4, 0x20, 0xc9,
	0x56, 0xc9, 0x11, 0x29, 0xd3, 0x0f, 0xf9, 0x11, 0x3f, 0x28, 0x92, 0x7a, 0xd8, 0x14, 0xc9, 0x1a,
	0x52, 0x76, 0xe2, 0xcb, 0x16, 0xb8, 0x18, 0x2e, 0x21, 0x62, 0x31, 0x30, 0x30, 0x4b, 0x49, 0x76,
	0x7c, 0x71, 0xee, 0xa9, 0x4a, 0x25, 0xb7, 0x54, 0x52, 0x95, 0x0f, 0xc8, 0x47, 0xe4, 0x1b, 0x72,
	0xca, 0x25, 0x55, 0xa9, 0x4a, 0x55, 0x4e, 0x39, 0xe5, 0xe4, 0x5b, 0x6a, 0x7a, 0x06, 0x58, 0x00,
	0x0b, 0x92, 0x92, 0x95, 0xcb, 0xd6, 0x74, 0x4f, 0x3f, 0x66, 0x7a, 0xba, 0x1b, 0xdd, 0xb3, 0x03,
	0x66, 0x8f, 0xfb, 0x22, 0xe4, 0x9e, 0xc7, 0xc2, 0xc5, 0x20, 0xe4, 0x82, 0x13, 0x18, 0x61, 0x3a,
	0x17, 0xfb, 0x9c, 0xf7, 0x3d, 0xb6, 0x64, 0x07, 0xee, 0x92, 0xed, 0xfb, 0x5c, 0xd8, 0xc2, 0xe5,
	0x7e, 0xa4, 0x28, 0x3b, 0xf3, 0x7a, 0x16, 0xa1, 0xbd, 0xe1, 0xfe, 0x92, 0x70, 0x07, 0x2c, 0x12,
	0xf6, 0x20, 0xd0, 0x04, 0x97, 0xf3, 0x04, 0xce, 0x30, 0x44, 0x09, 0x7a, 0x7e, 0x21, 0x3f, 0xbf,
	0xef, 0x32, 0xcf, 0xe9, 0x0e, 0xec, 0xe8, 0x50, 0x51, 0x58, 0x8f, 0x60, 0x7a, 0xc3, 0x8d, 0xc4,
	0x4a, 0x10, 0x44, 0x94, 0x7d, 0x33, 0x64, 0x91, 0x20, 0x17, 0xa0, 0x1e, 0xd8, 0x7d, 0xd6, 0x8d,
	0xdc, 0x6f, 0x59, 0xbb, 0xb4, 0x50, 0xba, 0x51, 0xa5, 0x86, 0x44, 0xec, 0xb8, 0xdf, 0x32, 0x72,
	0x09, 0x00, 0x27, 0x05, 0x3f, 0x64, 0x7e, 0x7b, 0x62, 0xa1, 0x74, 0xa3, 0x4e, 0x91, 0x7c, 0x57,
	0x22, 0xac, 0x2e, 0x98, 0x23, 0x71, 0x51, 0xc0, 0xfd, 0x88, 0x91, 0xab, 0x50, 0xb1, 0x83, 0x20,
	0x6a, 0x97, 0x16, 0xca, 0x37, 0x1a, 0xcb, 0xd3, 0x8b, 0x29, 0x83, 0xac, 0x04, 0x01, 0xc5, 0x49,
	0xf2, 0x3a, 0x4c, 0xfb, 0xec, 0x99, 0xe8, 0x8e, 0x09, 0x6f, 0x49, 0xf4, 0x76, 0xa2, 0xe0, 0x2a,
	0xb4, 0xee, 0x33, 0x29, 0x3f, 0x5e, 0x2d, 0x81, 0x8a, 0x6f, 0x0f, 0xd4, 0x42, 0xeb, 0x14, 0xc7,
	0x56, 0x08, 0xe6, 0xe3, 0xc0, 0xb1, 0x05, 0x4b, 0xd1, 0x5d, 0x81, 0xb2, 0x1d, 0x04, 0x48, 0x56,
	0xb0, 0x08, 0x39, 0x47, 0x3e, 0x82, 0xc6, 0x10, 0xd9, 0xd0, 0x40, 0xa8, 0xbf, 0xb1, 0xdc, 0x59,
	0x54, 0x36, 0x5c, 0x8c, 0x6d, 0xb8, 0x78, 0x4f, 0xda, 0xf0, 0x91, 0x1d, 0x1d, 0x52, 0x50, 0xe4,
	0x72, 0x6c, 0xfd, 0x30, 0x01, 0x67, 0xe4, 0xd6, 0x29, 0xf3, 0x98, 0x1d, 0xb1, 0xff, 0x87, 0x35,
	0xc9, 0x1c, 0xd4, 0x02, 0x3b, 0x64, 0xbe, 0x68, 0x97, 0x71, 0x4a, 0x43, 0xe4, 0x4b, 0x68, 0xed,
	0xbb, 0x9e, 0x60, 0x61, 0xd7, 0xb3, 0xf7, 0x98, 0x17, 0xb5, 0x2b, 0x68, 0xda, 0xb7, 0xd2, 0xbb,
	0x2a, 0x58, 0xcb, 0xe2, 0x3d, 0x64, 0xda, 0x40, 0x9e, 0x75, 0x5f, 0x84, 0xcf, 0x69, 0x73, 0x3f,
	0x85, 0xea, 0x7c, 0x0a, 0x33, 0x63, 0x24, 0xc4, 0x84, 0xf2, 0x21, 0x7b, 0xae, 0xed, 0x2b, 0x87,
	0x64, 0x16, 0xaa, 0x47, 0xb6, 0x37, 0x64, 0x7a, 0xc1, 0x0a, 0xf8, 0x70, 0xe2, 0xfd, 0x92, 0xc5,
	0x61, 0x36, 0xab, 0x57, 0xbb, 0xc0, 0x12, 0x18, 0xa1, 0xc6, 0x69, 0x37, 0x38, 0x93, 0x5e, 0xab,
	0xa6, 0xa7, 0x09, 0xd1, 0x0b, 0xbb, 0xc3, 0x1b, 0x30, 0x73, 0x9f, 0xc5, 0xfa, 0x4e, 0x72, 0x89,
	0x2e, 0x9c, 0xd9, 0x11, 0x21, 0xb3, 0x07, 0x2b, 0x41, 0xb0, 0xc1, 0xfb, 0x27, 0x90, 0x92, 0x77,
	0xa0, 0xc2, 0x03, 0x11, 0xe9, 0xf3, 0x5f, 0xc8, 0x18, 0x95, 0xf7, 0x57, 0xfa, 0xfd, 0x90, 0xf5,
	0x6d, 0xc1, 0xc3, 0x0d, 0xde, 0xdf, 0x0a, 0x44, 0x44, 0x91, 0xda, 0xfa, 0x15, 0xcc, 0xae, 0x86,
	0xcc, 0x16, 0x2c, 0xb7, 0x98, 0xd1, 0x19, 0x96, 0x32, 0x67, 0x78, 0x0b, 0x26, 0xf5, 0x6e, 0xb5,
	0xa2, 0x42, 0x8b, 0xc4, 0x34, 0xd2, 0x53, 0x42, 0x25, 0xb1, 0xeb, 0x3a, 0xda, 0x1d, 0xea, 0x1a,
	0xf3, 0xd0, 0xb1, 0x9e, 0xc0, 0x39, 0xa5, 0x7d, 0x8d, 0x05, 0x1e, 0x7f, 0x3e, 0x60, 0xbe, 0x38,
	0x6d, 0x01, 0xed, 0xec, 0x02, 0xea, 0x2f, 0xac, 0xeb, 0x37, 0xa5, 0xd8, 0x96, 0xeb, 0x47, 0xcc,
	0x17, 0xd1, 0x69, 0x8a, 0xae, 0x40, 0x93, 0xef, 0x3d, 0x61, 0x3d, 0xd1, 0x15, 0xcf, 0x03, 0x26,
	0xed, 0x5a, 0xbe, 0x51, 0xa7, 0x0d, 0x85, 0xdb, 0x95, 0xa8, 0xe4, 0x18, 0xca, 0xa9, 0x63, 0x20,
	0x50, 0x09, 0xec, 0x48, 0xb4, 0x2b, 0x0b, 0xa5, 0x1b, 0x06, 0xc5, 0xb1, 0xf4, 0xbc, 0x1e, 0x1f,
	0xfa, 0xa2, 0x5d, 0xc5, 0x40, 0x52, 0x80, 0xf5, 0xeb, 0x32, 0x94, 0x57, 0x82, 0xa0, 0xf0, 0x30,
	0xaf, 0x40, 0xd3, 0x71, 0xa3, 0xc0, 0xb3, 0x9f, 0x77, 0x71, 0x4e, 0x6d, 0xb5, 0xa1, 0x71, 0x9b,
	0x92, 0xe4, 0x6d, 0xa8, 0xe9, 0x30, 0x2a, 0xa3, 0x6b, 0x5e, 0xc8, 0x25, 0x87, 0xc5, 0x74, 0xc0,
	0x68, 0x52, 0x99, 0x2b, 0x7a, 0x68, 0xf0, 0xae, 0xcc, 0xc9, 0xb8, 0xc8, 0xa2, 0x5c, 0xb1, 0x1b,
	0x27, 0x6c, 0x0a, 0x8a, 0x5c, 0x22, 0x52, 0x89, 0x06, 0x99, 0xab, 0xa7, 0x33, 0x2b, 0x72, 0x64,
	0xbe, 0x0e, 0x53, 0x0e, 0x1e, 0x32, 0x32, 0xf3, 0xa1, 0x68, 0xd7, 0xd0, 0x18, 0x2d, 0x85, 0xdd,
	0x55, 0x48, 0xd2, 0x01, 0x23, 0x12, 0xa1, 0x2d, 0x58, 0xff, 0x79, 0x7b, 0x12, 0x37, 0x9d, 0xc0,
	0xe9, 0xa3, 0x37, 0x32, 0x47, 0xdf, 0xf9, 0x00, 0x1a, 0x3f, 0x35, 0xf6, 0xff, 0x53, 0x86, 0x49,
	0xed, 0xb6, 0x85, 0x27, 0x71, 0x11, 0xea, 0x76, 0x28, 0xdc, 0x7d, 0xbb, 0x27, 0x94, 0xa5, 0xeb,
	0x74, 0x84, 0x20, 0x8b, 0x50, 0x66, 0xfe, 0x91, 0x4e, 0x64, 0x17, 0x0b, 0x42, 0x61, 0x71, 0xdd,
	0x3f, 0x52, 0x47, 0x20, 0x09, 0xc9, 0x9d, 0xe4, 0xd0, 0xaa, 0xc8, 0x32, 0x5f, 0xc4, 0x52, 0x74,
	0x70, 0x9f, 0x41, 0x3d, 0x08, 0x79, 0x8f, 0x45, 0x32, 0x17, 0xd5, 0x90, 0xd7, 0x2a, 0xe2, 0xdd,
	0x8e, 0x89, 0x14, 0xfb, 0x88, 0x29, 0x7f, 0xf4, 0x93, 0x2f, 0x73, 0xf4, 0x9d, 0xf7, 0xc0, 0x88,
	0x37, 0xf2, 0x32, 0xd6, 0x7d, 0x85, 0x83, 0xe9, 0x3c, 0x86, 0xa9, 0xec, 0x66, 0x0a, 0xb8, 0x6f,
	0xa5, 0xb9, 0x1b, 0xcb, 0xe7, 0xd2, 0x16, 0xd1, 0xcc, 0x32, 0x52, 0xd3, 0xe7, 0x1d, 0x01, 0xe0,
	0xe7, 0x55, 0x9d, 0xf8, 0x7b, 0xd0, 0x0c, 0x42, 0x76, 0xd4, 0x8d, 0xfd, 0xaa, 0x74, 0x7c, 0x4e,
	0x6b, 0x48, 0xc2, 0x98, 0xef, 0xe5, 0xd2, 0xa0, 0xf5, 0xe7, 0x2a, 0xc0, 0x28, 0xc5, 0x15, 0xfa,
	0xd9, 0x3c, 0x34, 0xb8, 0xe7, 0x24, 0x0b, 0x51, 0x29, 0x05, 0xb8, 0xe7, 0xc4, 0x2a, 0xe7, 0xa1,
	0xe1, 0xb3, 0xa7, 0x09, 0x41, 0x45, 0x11, 0xf8, 0xec, 0x69, 0x4c, 0x90, 0x0e, 0x9d, 0x6a, 0x2e,
	0x74, 0xde, 0x81, 0x5a, 0x24, 0x6c, 0x31, 0x8c, 0x30, 0xea, 0xa6, 0xb2, 0xae, 0x3a, 0x5a, 0xd9,
	0x0e, 0xd2, 0x50, 0x4d, 0x4b, 0x56, 0xd3, 0x4e, 0x37, 0x89, 0x4e, 0x77, 0xbd, 0x98, 0xf1, 0x04,
	0xbf, 0x7b, 0x07, 0x2a, 0xc2, 0xee, 0x47, 0x6d, 0x03, 0xf9, 0x17, 0x8e, 0xe1, 0xdf, 0xb5, 0xfb,
	0x9a, 0x15, 0xa9, 0x0b, 0xd2, 0x45, 0xbd, 0x28, 0x5d, 0xe4, 0x9c, 0x1a, 0x5e, 0x36, 0x9f, 0xb1,
	0x67, 0x81, 0x1b, 0x6a, 0xe6, 0xc6, 0xe9, 0xcc, 0x8a, 0x1c, 0x99, 0xdf, 0x05, 0x83, 0xf9, 0x8e,
	0xe2, 0x6c, 0x9e, 0xca, 0x39, 0xc9, 0x7c, 0x07, 0x03, 0xe9, 0xe7, 0x2f, 0xe0, 0xd5, 0x99, 0x98,
	0xa8, 0xa6, 0x63, 0xe2, 0x6b, 0xa8, 0x27, 0x86, 0x2a, 0x60, 0xbc, 0x93, 0x0d, 0x87, 0x2b, 0xc5,
	0xb6, 0x8e, 0x03, 0xc3, 0xee, 0x47, 0xe9, 0xc0, 0xf8, 0x6d, 0x09, 0xce, 0x16, 0x12, 0x91, 0x4f,
	0xf5, 0x09, 0xaa, 0x12, 0xe8, 0xcd, 0x53, 0xa5, 0xe6, 0x0f, 0xb3, 0x73, 0xe7, 0xe4, 0x65, 0x1f,
	0x9f, 0x9c, 0xff, 0x5e, 0x82, 0xc6, 0x2a, 0x93, 0xd9, 0xd6, 0xed, 0xd9, 0xa2, 0x38, 0x41, 0xcf,
	0x41, 0x2d, 0xe4, 0x43, 0x91, 0x7c, 0xa1, 0x35, 0x24, 0x69, 0x7b, 0x2c, 0x8c, 0x6b, 0x50, 0x1c,
	0xc7, 0xba, 0x2b, 0x23, 0xdd, 0x39, 0x07, 0xaa, 0xbe, 0xca, 0x07, 0xb1, 0xf6, 0x32, 0x1f, 0x44,
	0xeb, 0xbf, 0x65, 0xa8, 0x52, 0xb9, 0xd4, 0xe3, 0x76, 0xa5, 0xab, 0x92, 0x89, 0x4c, 0x55, 0xb2,
	0x04, 0x15, 0x59, 0x8e, 0xe0, 0xae, 0xa6, 0xb2, 0xdf, 0x7c, 0x14, 0xa6, 0x7e, 0x31, 0xe9, 0x21,
	0xa1, 0xac, 0x24, 0x22, 0x16, 0x1e, 0xb9, 0x3d, 0xa6, 0x2a, 0x09, 0xb5, 0xf7, 0x86, 0xc6, 0x6d,
	0xc6, 0x25, 0x0b, 0x0f, 0xe3, 0xea, 0x04, 0xc7, 0x52, 0xbf, 0xc7, 0x6c, 0x87, 0x85, 0xb8, 0x2b,
	0x83, 0x6a, 0xe8, 0x95, 0xbe, 0x22, 0x79, 0x7b, 0x19, 0x2f, 0x55, 0x40, 0xcc, 0x41, 0xcd, 0xe1,
	0x03, 0xdb, 0xf5, 0x31, 0x13, 0xd4, 0xa9, 0x86, 0xc8, 0x07, 0xd0, 0xe8, 0x8d, 0x5c, 0x44, 0xa7,
	0x80, 0xcc, 0x97, 0x20, 0xe5, 0x41, 0x34, 0x4d, 0x2b, 0x45, 0x46, 0xc2, 0xed, 0x1d, 0x3e, 0xc7,
	0xd8, 0x37, 0xa8, 0x86, 0x54, 0x0d, 0x27, 0x0e, 0x30, 0xae, 0xeb, 0x14, 0xc7, 0x98, 0x90, 0x42,
	0xdb, 0xf5, 0xbb, 0x7b, 0x76, 0xef, 0x90, 0xf9, 0x4e, 0xd4, 0x6e, 0x21, 0x4f, 0x0b, 0xb1, 0x77,
	0x35, 0xd2, 0xba, 0x0c, 0xf5, 0xe4, 0x04, 0x88, 0x01, 0x95, 0x07, 0xbb, 0xbb, 0xdb, 0xe6, 0x6b,
	0x64, 0x12, 0xca, 0xbb, 0xab, 0xdb, 0x66, 0xc9, 0xfa, 0xb1, 0x04, 0x06, 0x65, 0x11, 0x1f, 0x86,
	0x3d, 0x76, 0xdc, 0x77, 0x80, 0x3d, 0x13, 0x2c, 0xf4, 0x6d, 0x4f, 0x96, 0xb1, 0xea, 0xf4, 0x21,
	0x46, 0x3d, 0x74, 0xc8, 0x92, 0x2a, 0x39, 0x54, 0xd1, 0x77, 0x29, 0xfb, 0xd9, 0x51, 0x72, 0x73,
	0x35, 0x07, 0xd1, 0x8d, 0x6c, 0x05, 0xc3, 0x43, 0xf5, 0xad, 0xaf, 0xe2, 0xf6, 0x3f, 0xb5, 0x18,
	0xb0, 0xaa, 0x50, 0xfe, 0x9c, 0xef, 0x59, 0xff, 0x06, 0xa8, 0x62, 0x09, 0xfe, 0x52, 0x8e, 0x4f,
	0x52, 0x8e, 0x5f, 0xd7, 0xbe, 0x3d, 0x0b, 0x55, 0x16, 0x86, 0x3c, 0xd4, 0x4e, 0xad, 0x80, 0x57,
	0x0b, 0x69, 0xdd, 0x6f, 0xd7, 0x4e, 0xe8, 0xb7, 0x3f, 0x84, 0xa6, 0x1d, 0x04, 0x5d, 0x87, 0x79,
	0x4c, 0xb8, 0xdc, 0xd7, 0x31, 0x70, 0x2e, 0x47, 0xbb, 0xa6, 0xa7, 0x69, 0xc3, 0x1e, 0x01, 0xe4,
	0x0e, 0x48, 0xb0, 0x9b, 0x2e, 0x63, 0x1b, 0xcb, 0x73, 0x79, 0x35, 0xba, 0x7c, 0x00, 0x7b, 0x54,
	0xa8, 0xdc, 0x03, 0xd3, 0x49, 0x72, 0x6d, 0x97, 0x49, 0xf3, 0x61, 0x1c, 0xe4, 0xea, 0xfe, 0x51,
	0x3e, 0x46, 0x0b, 0xd3, 0x69, 0x27, 0x8b, 0x90, 0xfb, 0x7b, 0xc2, 0xf7, 0x74, 0x94, 0x64, 0xf6,
	0xf7, 0x39, 0xdf, 0xa3, 0x72, 0x8e, 0x7c, 0x0c, 0xad, 0xa8, 0x67, 0x7b, 0xac, 0xab, 0x7b, 0x27,
	0xfd, 0x61, 0x6c, 0xa7, 0x89, 0x77, 0x24, 0x81, 0xee, 0xa0, 0x68, 0x33, 0x4a, 0x41, 0xe9, 0xd2,
	0xa8, 0xf9, 0x02, 0x1d, 0xe2, 0x3d, 0x30, 0xf5, 0x70, 0x64, 0xd1, 0xd6, 0xf8, 0xc6, 0x34, 0x5f,
	0x62, 0xd5, 0xe9, 0x30, 0x8b, 0x20, 0xb7, 0xc1, 0x88, 0xcb, 0xf2, 0xf6, 0x14, 0xf2, 0xcf, 0x66,
	0xcc, 0xaa, 0xe7, 0x68, 0x42, 0x25, 0x39, 0x82, 0x90, 0x1f, 0xb9, 0x32, 0xc9, 0x4d, 0x8f, 0x73,
	0x6c, 0xeb, 0x39, 0x9a, 0x50, 0x49, 0x8e, 0x50, 0xc7, 0x58, 0xdb, 0x1c, 0xe7, 0x88, 0xe3, 0x8f,
	0x26, 0x54, 0xe4, 0x21, 0xcc, 0xc4, 0xe3, 0xd1, 0xf6, 0x66, 0x90, 0xf5, 0x62, 0x11, 0x6b, 0xb2,
	0x3f, 0x33, 0xcc, 0x61, 0xc8, 0x0e, 0x9c, 0x4d, 0x44, 0x65, 0xfc, 0x8f, 0xa0, 0xb8, 0xf9, 0x22,
	0x71, 0x69, 0x3f, 0x3c, 0x13, 0x8e, 0x23, 0xc9, 0x1b, 0x50, 0xc5, 0xcf, 0x65, 0xfb, 0x0c, 0x0a,
	0x99, 0x19, 0xfb, 0x9e, 0x50, 0x35, 0x4f, 0x3e, 0x83, 0x29, 0x1c, 0x8c, 0xd4, 0xce, 0x22, 0xc7,
	0xf9, 0x31, 0x8e, 0x44, 0x61, 0x2b, 0x4c, 0x83, 0xe8, 0xc1, 0x98, 0xb1, 0xbb, 0x03, 0xb7, 0xaf,
	0xae, 0xfb, 0xda, 0x67, 0x0b, 0x3c, 0x18, 0x69, 0x1e, 0xc5, 0x24, 0x74, 0xda, 0xc9, 0x22, 0xe4,
	0x4a, 0x7a, 0xde, 0x30, 0x12, 0x2c, 0xc4, 0x54, 0x3c, 0x0c, 0xda, 0x73, 0xe3, 0x2b, 0x59, 0x55,
	0x14, 0x77, 0x91, 0x80, 0xb6, 0x7a, 0x69, 0x90, 0x7c, 0x09, 0x73, 0xd2, 0x80, 0x7d, 0x3b, 0xdc,
	0xb3, 0xfb, 0xac, 0xdb, 0x93, 0x2c, 0x3d, 0x5c, 0xcf, 0xb9, 0xf1, 0xbb, 0x93, 0x95, 0x20, 0xb8,
	0xaf, 0x08, 0x57, 0x13, 0x3a, 0x3a, 0x6b, 0x17, 0x60, 0xc9, 0x35, 0xa8, 0x44, 0xae, 0x7f, 0xd8,
	0x6e, 0xa3, 0x14, 0x33, 0x13, 0x2f, 0xae, 0x7f, 0x48, 0x71, 0x16, 0xc3, 0xcb, 0xf5, 0x0f, 0x47,
	0x86, 0x3c, 0x5f, 0x10, 0x5e, 0xae, 0x7f, 0x98, 0xd8, 0xb1, 0x19, 0xa5, 0x20, 0x72, 0x13, 0x6a,
	0x47, 0xdc, 0x1b, 0x0e, 0x58, 0xbb, 0x83, 0x7c, 0x24, 0xcd, 0xf7, 0x25, 0xce, 0x50, 0x4d, 0x61,
	0xfd, 0xa3, 0x04, 0x8d, 0xf4, 0x69, 0x17, 0xe5, 0xdb, 0xf7, 0x65, 0xa1, 0xed, 0x31, 0xc1, 0x9c,
	0x6e, 0xaa, 0x8c, 0x2a, 0x74, 0x85, 0x96, 0x26, 0xa4, 0xaa, 0xc0, 0x5a, 0x81, 0x99, 0x84, 0x53,
	0xbb, 0x56, 0x7c, 0x17, 0x51, 0x1c, 0x16, 0x66, 0xcc, 0x1f, 0x53, 0x93, 0x4f, 0xc0, 0x1c, 0x89,
	0xd0, 0x17, 0x6d, 0x95, 0xe3, 0x2f, 0xda, 0xa6, 0x13, 0x01, 0x8a, 0xd6, 0xfa, 0xfd, 0x04, 0x4c,
	0xe7, 0x52, 0x1e, 0x79, 0x0f, 0x60, 0x94, 0xf4, 0x74, 0x43, 0x37, 0x57, 0x9c, 0x23, 0x69, 0x8a,
	0x92, 0x9c, 0x07, 0xe3, 0x09, 0xdf, 0xc3, 0xcb, 0x9e, 0xf8, 0x66, 0xe9, 0x09, 0xdf, 0xc3, 0xef,
	0xf8, 0x0a, 0xd4, 0xe5, 0x94, 0xec, 0x8a, 0xe2, 0xca, 0xeb, 0xda, 0x09, 0x59, 0x57, 0xa6, 0x52,
	0xd9, 0x49, 0x31, 0x2a, 0x25, 0xe2, 0xc8, 0x3a, 0x04, 0x23, 0xc6, 0x92, 0x06, 0x4c, 0x6e, 0xaf,
	0x6f, 0xae, 0x3d, 0xdc, 0xbc, 0x6f, 0xbe, 0x26, 0x81, 0xbb, 0x1b, 0x5b, 0xab, 0x5f, 0xac, 0xaf,
	0x99, 0x25, 0xd2, 0x04, 0x63, 0x67, 0x77, 0x85, 0xee, 0xca, 0xa9, 0x09, 0x52, 0x83, 0x89, 0xc7,
	0xdb, 0x66, 0x59, 0x61, 0xb7, 0xb6, 0xb7, 0x25, 0xb6, 0x2a, 0x8b, 0x8a, 0xb5, 0xad, 0xaf, 0x36,
	0xcd, 0x9a, 0x64, 0x5d, 0xa5, 0x2b, 0x3b, 0x0f, 0xd6, 0xd7, 0xcc, 0x49, 0x02, 0x50, 0xbb, 0xb7,
	0xf2, 0x70, 0x63, 0x7d, 0xcd, 0x34, 0xac, 0x29, 0x68, 0xa6, 0x13, 0xb4, 0x35, 0x03, 0xd3, 0xb9,
	0xfc, 0x69, 0x01, 0x18, 0x71, 0x4a, 0x94, 0xe3, 0x38, 0xd9, 0x59, 0x04, 0xcc, 0x7c, 0x2e, 0xb2,
	0xce, 0xc2, 0x99, 0x82, 0x84, 0x62, 0x4d, 0x43, 0x2b, 0x13, 0xf0, 0x52, 0x4d, 0x2e, 0x7a, 0x25,
	0x4d, 0x26, 0x14, 0xad, 0x39, 0x98, 0x2d, 0x8a, 0x28, 0x5c, 0x72, 0xca, 0xcd, 0xad, 0x1a, 0x54,
	0x24, 0x6c, 0x19, 0x50, 0x53, 0x4e, 0x6d, 0xfd, 0x58, 0x85, 0x46, 0xaa, 0xa7, 0xc7, 0xb2, 0x26,
	0xd4, 0x5d, 0x89, 0x2c, 0x6b, 0xc2, 0x7e, 0x44, 0x96, 0x55, 0x6d, 0x34, 0x31, 0xde, 0x6a, 0xa6,
	0x38, 0x73, 0xe5, 0xd1, 0xeb, 0x50, 0x95, 0x15, 0x6f, 0xec, 0xba, 0x99, 0xb0, 0xdd, 0xe6, 0xa1,
	0xa0, 0x6a, 0x9a, 0x2c, 0xc1, 0xa4, 0x0a, 0xab, 0xd8, 0x45, 0xcf, 0x16, 0x44, 0x1e, 0xfb, 0x86,
	0xc6, 0x54, 0x72, 0x81, 0x7c, 0xe0, 0xbb, 0x58, 0x80, 0x18, 0x14, 0xc7, 0xb2, 0x1a, 0x3f, 0xe0,
	0x91, 0xe8, 0xfa, 0x4c, 0x3c, 0xe5, 0xe1, 0xa1, 0x2e, 0xae, 0x1b, 0x12, 0xb7, 0xa9, 0x50, 0xe4,
	0x67, 0x40, 0x90, 0x24, 0x70, 0x1d, 0xac, 0xd8, 0xa3, 0xc0, 0xee, 0xa9, 0x42, 0xdb, 0xa0, 0xa6,
	0x9c, 0xd9, 0x76, 0x9d, 0xcd, 0x18, 0x4f, 0xda, 0x30, 0xa9, 0x4b, 0xf9, 0xf8, 0x4e, 0x4c, 0x83,
	0xe4, 0x22, 0xd4, 0x43, 0x16, 0x0d, 0xc3, 0x90, 0xf5, 0x54, 0xa9, 0x60, 0xd0, 0x11, 0x82, 0xac,
	0xe1, 0xac, 0x0e, 0x5a, 0xc0, 0xfd, 0xbc, 0x7e, 0x9c, 0xbd, 0x92, 0x78, 0xd5, 0xbd, 0x7d, 0xc2,
	0x48, 0x6e, 0x41, 0x6d, 0xc0, 0x87, 0xbe, 0x88, 0xda, 0x8d, 0x71, 0x93, 0x3c, 0xe0, 0x91, 0x78,
	0x24, 0x67, 0xa9, 0x26, 0x22, 0xb7, 0x80, 0x78, 0xae, 0x3f, 0x7c, 0xd6, 0xed, 0xd9, 0x81, 0xbd,
	0xe7, 0x7a, 0xae, 0x70, 0x59, 0xd4, 0x6e, 0xe2, 0x01, 0xce, 0xe0, 0xcc, 0x6a, 0x6a, 0x82, 0xdc,
	0x87, 0x69, 0xdb, 0xf3, 0xf8, 0x53, 0xe6, 0x74, 0x1d, 0x26, 0xf7, 0x24, 0x6b, 0x6e, 0xa9, 0xe6,
	0x72, 0xf6, 0x1f, 0x83, 0xbd, 0x55, 0xee, 0x0b, 0xdb, 0xf5, 0x59, 0xb8, 0x86, 0x64, 0x74, 0x4a,
	0xb3, 0x29, 0x30, 0x22, 0x6f, 0xc2, 0xcc, 0xd3, 0xd0, 0x15, 0xcc, 0xde, 0xf3, 0x58, 0xb7, 0xd7,
	0x0f, 0xf9, 0x30, 0x88, 0xb0, 0x48, 0x30, 0xa8, 0x99, 0x4c, 0xac, 0x2a, 0xfc, 0x4f, 0xbe, 0xea,
	0xfa, 0x1a, 0xa6, 0xb2, 0x86, 0x2a, 0xe0, 0x5e, 0xce, 0x36, 0xe8, 0x17, 0xf3, 0xe6, 0x8a, 0x05,
	0xec, 0x04, 0xac, 0x97, 0xae, 0x9c, 0x7b, 0x50, 0x91, 0xae, 0x98, 0x74, 0x6a, 0xa5, 0x54, 0xa7,
	0x36, 0x0b, 0x55, 0xac, 0x69, 0xe3, 0x15, 0xa9, 0x7f, 0xeb, 0xde, 0x1a, 0xf9, 0x45, 0x79, 0xbc,
	0x3e, 0x95, 0xba, 0x76, 0xd4, 0x74, 0xe2, 0x30, 0xd6, 0x3a, 0xd4, 0x13, 0x2f, 0x4e, 0x5a, 0xa0,
	0x52, 0xaa, 0x05, 0xba, 0x16, 0x7f, 0x2a, 0xba, 0xdc, 0xef, 0x46, 0x82, 0x07, 0xa8, 0xd2, 0xa0,
	0x4d, 0x85, 0xdd, 0xf2, 0x77, 0x04, 0x0f, 0xac, 0xef, 0xa0, 0x91, 0x12, 0x3f, 0x76, 0x93, 0x5d,
	0x1a, 0xbf, 0xc9, 0x9e, 0x83, 0x9a, 0xaa, 0xc0, 0xb5, 0x3c, 0x0d, 0x91, 0xb7, 0xa0, 0xda, 0x3b,
	0x60, 0xbd, 0x43, 0xbd, 0x83, 0x0b, 0xf9, 0x1d, 0x3c, 0x60, 0xb6, 0x27, 0x0e, 0x56, 0x25, 0x09,
	0x55, 0x94, 0xd6, 0x5f, 0x26, 0x60, 0x3a, 0x37, 0x95, 0x74, 0x0e, 0xa5, 0x54, 0xe7, 0xf0, 0x2e,
	0x18, 0xae, 0x2f, 0x58, 0x78, 0x64, 0x7b, 0x5a, 0xfa, 0xf9, 0xb1, 0x06, 0x61, 0x4d, 0xff, 0x29,
	0x49, 0x13, 0x52, 0x19, 0x53, 0xe2, 0x20, 0x64, 0xd1, 0x01, 0xf7, 0x1c, 0x6c, 0x3a, 0xaa, 0x74,
	0x84, 0x20, 0x17, 0xa0, 0x7e, 0xe8, 0x7a, 0x5e, 0xd7, 0xe1, 0x4f, 0x7d, 0x1d, 0xf5, 0x86, 0x44,
	0xac, 0xf1, 0xa7, 0x3e, 0xf9, 0x04, 0x5a, 0x91, 0xb0, 0x43, 0x91, 0xb9, 0xfe, 0x3e, 0x51, 0x6d,
	0x13, 0xe9, 0xe3, 0x9b, 0xae, 0xf8, 0x40, 0x26, 0x53, 0x07, 0x42, 0xa0, 0x22, 0x13, 0x82, 0x8e,
	0x7c, 0x1c, 0x4b, 0x77, 0x18, 0xd8, 0xa2, 0x77, 0xa0, 0xbb, 0x64, 0x05, 0xa8, 0x4e, 0x17, 0xef,
	0xff, 0x00, 0x57, 0xad, 0x21, 0xeb, 0x2e, 0x98, 0x79, 0xbf, 0x53, 0xd7, 0xec, 0xaa, 0xf2, 0x97,
	0x26, 0x2b, 0xd3, 0x18, 0x94, 0xb2, 0x3d, 0x77, 0xe0, 0xaa, 0xd6, 0xac, 0x4c, 0x15, 0x60, 0xfd,
	0xb1, 0x04, 0xf5, 0x24, 0xd6, 0x49, 0x07, 0x0c, 0x8f, 0xf7, 0x54, 0x79, 0xa7, 0x2c, 0x9e, 0xc0,
	0x72, 0x15, 0xc2, 0x0e, 0xfb, 0x2c, 0xe9, 0xed, 0x14, 0x24, 0x79, 0x64, 0x18, 0xca, 0x28, 0xc4,
	0xd3, 0x30, 0x68, 0x02, 0x63, 0xdb, 0x8f, 0x61, 0xac, 0x9b, 0x3c, 0x0d, 0xc9, 0xbd, 0x3b, 0xb6,
	0xb0, 0xf5, 0x4d, 0x27, 0x8e, 0xe5, 0xfa, 0xf6, 0x3d, 0xbb, 0x1f, 0xe9, 0xbf, 0x16, 0x14, 0x60,
	0xfd, 0xb3, 0x04, 0x64, 0x3c, 0x49, 0x64, 0xdc, 0xa2, 0xaa, 0xdd, 0x22, 0x36, 0xf2, 0x44, 0xca,
	0xc8, 0x68, 0xd0, 0x27, 0x3c, 0xc4, 0x95, 0x95, 0xa9, 0x02, 0x10, 0xeb, 0xfa, 0xba, 0xf5, 0x94,
	0x58, 0x09, 0x90, 0x05, 0x68, 0x04, 0x2c, 0x1c, 0xb8, 0x51, 0xe4, 0x72, 0x3f, 0xd2, 0x6b, 0x4b,
	0xa3, 0xa4, 0x8f, 0xec, 0xbb, 0x1e, 0xeb, 0x0e, 0xb8, 0xa3, 0x2e, 0x8c, 0x5a, 0xd4, 0x90, 0x88,
	0x47, 0xdc, 0x61, 0x32, 0x61, 0x0c, 0x5d, 0x07, 0x8f, 0xb8, 0x45, 0xe5, 0x50, 0x62, 0xfa, 0xae,
	0x83, 0x07, 0xdc, 0xa2, 0x72, 0x28, 0x15, 0x63, 0x76, 0xd3, 0x29, 0x5d, 0x01, 0xd6, 0x9f, 0x26,
	0xc0, 0xd8, 0xe0, 0xfd, 0xd5, 0x83, 0xa1, 0x7f, 0x98, 0xb8, 0x45, 0x29, 0xe5, 0x16, 0xa6, 0xea,
	0xfb, 0xd4, 0xc6, 0xb0, 0xcd, 0x33, 0xa1, 0x3c, 0x88, 0xfa, 0xba, 0x9f, 0x96, 0x43, 0x19, 0xaa,
	0xfa, 0xda, 0x56, 0x55, 0x41, 0xfa, 0xaa, 0x28, 0x48, 0x7d, 0x74, 0x3f, 0x86, 0x9a, 0xee, 0x7f,
	0xaa, 0x58, 0x06, 0x5d, 0x3f, 0xf6, 0x6f, 0x46, 0xf5, 0x57, 0xdb, 0x8e, 0xaa, 0xfc, 0x34, 0x13,
	0xf9, 0x48, 0xba, 0xa1, 0xc4, 0xeb, 0x6b, 0xe8, 0xab, 0xa7, 0xb0, 0xe3, 0x3d, 0x96, 0x66, 0x79,
	0xa5, 0xab, 0x27, 0xeb, 0xaf, 0x25, 0x98, 0x2d, 0xfa, 0x1b, 0x54, 0xfa, 0xd7, 0x3e, 0x47, 0x83,
	0x96, 0x54, 0xf2, 0x51, 0x50, 0x81, 0xc1, 0xd0, 0xfb, 0x7d, 0xac, 0x71, 0xd1, 0xbb, 0x10, 0x78,
	0x11, 0xa3, 0xdd, 0x83, 0xa6, 0xda, 0x82, 0xfe, 0x27, 0xb1, 0xba, 0x50, 0x7e, 0xd1, 0xbd, 0x37,
	0xa2, 0x64, 0x1c, 0xdd, 0xbc, 0x07, 0x66, 0xfe, 0xaa, 0x3e, 0x5b, 0x4b, 0x8e, 0x6a, 0xc0, 0x92,
	0x9c, 0xa0, 0x8f, 0x37, 0x37, 0x55, 0x25, 0xd9, 0x04, 0x63, 0x75, 0xeb, 0xd1, 0xf6, 0xc6, 0xfa,
	0xee, 0xba, 0x59, 0xbe, 0xf9, 0x00, 0xce, 0x1d, 0xa3, 0x4f, 0x4a, 0xd8, 0xd9, 0x5d, 0xdb, 0x7a,
	0xbc, 0xab, 0xa4, 0xed, 0xec, 0xae, 0xad, 0x53, 0x6a, 0x96, 0x64, 0xd1, 0xf9, 0x70, 0xf3, 0xe1,
	0xae, 0x39, 0x21, 0xe5, 0x3e, 0xde, 0xfc, 0x62, 0x53, 0x56, 0xa0, 0xe5, 0x9b, 0xd7, 0xe0, 0xfc,
	0xb1, 0x87, 0x4e, 0x26, 0xa1, 0xbc, 0xb2, 0xbd, 0x6d, 0xbe, 0xb6, 0xfc, 0x87, 0x49, 0x80, 0xd5,
	0x64, 0xaf, 0xe4, 0x2b, 0x30, 0xe2, 0xc7, 0x16, 0xe4, 0x42, 0xfe, 0xbf, 0xff, 0xd4, 0x8b, 0x8e,
	0xce, 0xc5, 0xe2, 0x49, 0xf5, 0xe7, 0xbc, 0x65, 0xfe, 0xf0, 0xb7, 0x7f, 0xfd, 0x6e, 0x02, 0x88,
	0xb1, 0x74, 0xb4, 0xbc, 0x84, 0x97, 0x5a, 0x5b, 0x50, 0x53, 0x8f, 0x2c, 0x48, 0xa6, 0x17, 0xcc,
	0x3c, 0xbc, 0xe8, 0xe4, 0xef, 0x74, 0xac, 0xf3, 0x28, 0xe7, 0x0c, 0x99, 0x91, 0x72, 0xbe, 0x93,
	0xdf, 0xa8, 0x8f, 0xa5, 0xb4, 0xa5, 0x5b, 0xdf, 0x93, 0x5f, 0x42, 0x3d, 0x79, 0x90, 0x41, 0x32,
	0xab, 0xc9, 0xbf, 0xd3, 0x18, 0x17, 0x7b, 0x09, 0xc5, 0x9e, 0xb3, 0xce, 0xa2, 0x58, 0x3b, 0x08,
	0x16, 0x33, 0xa2, 0xfb, 0x00, 0xa3, 0x17, 0x00, 0xe4, 0x52, 0x6e, 0xbd, 0xd9, 0x3f, 0xe3, 0x3b,
	0x45, 0xcd, 0x90, 0x75, 0x1d, 0x15, 0xcc, 0x93, 0x4b, 0xa8, 0x20, 0xb3, 0xf0, 0xa5, 0xb8, 0x99,
	0x5a, 0xba, 0x45, 0x8e, 0xa0, 0x99, 0x7e, 0xdb, 0x40, 0xe6, 0x4f, 0x79, 0x6d, 0xd1, 0x59, 0x38,
	0x9e, 0x40, 0x5b, 0xfe, 0x2a, 0x6a, 0xbe, 0x44, 0x2e, 0x9c, 0xa0, 0x99, 0xf4, 0xa1, 0x99, 0x7e,
	0xb9, 0x90, 0xd5, 0x5b, 0xf0, 0xa6, 0xa1, 0x33, 0x9b, 0x8b, 0x07, 0xcc, 0x65, 0xd6, 0x65, 0xd4,
	0xd5, 0x26, 0x73, 0x63, 0xa7, 0xb3, 0xe4, 0xf1, 0xfe, 0xf7, 0xb7, 0x4b, 0x64, 0x00, 0xad, 0xcc,
	0x0b, 0x06, 0x92, 0xd9, 0x40, 0xd1, 0xe3, 0x86, 0x13, 0xed, 0x69, 0x29, 0x7b, 0xaa, 0x5b, 0xc7,
	0xb1, 0x6d, 0x7d, 0x4f, 0x86, 0x60, 0xe6, 0x9f, 0x2c, 0x90, 0xab, 0xe3, 0x1a, 0xc7, 0x1e, 0x34,
	0x74, 0x32, 0x0d, 0x35, 0xf6, 0x89, 0xd6, 0x1b, 0xa8, 0xf2, 0x8a, 0x35, 0x5f, 0xa4, 0x72, 0xd4,
	0x9a, 0x46, 0xb7, 0x4b, 0xe4, 0x17, 0xb1, 0x39, 0xd5, 0xe3, 0x85, 0x22, 0x73, 0x66, 0x9e, 0x35,
	0x14, 0xa9, 0x23, 0xa8, 0xae, 0x49, 0x40, 0xaa, 0xc3, 0x2b, 0xc4, 0xe8, 0x76, 0xe9, 0x6e, 0xed,
	0xeb, 0x8a, 0xec, 0xd9, 0xf6, 0x6a, 0x98, 0x41, 0xdf, 0xfe, 0x5f, 0x00, 0x00, 0x00, 0xff, 0xff,
	0xf5, 0xa9, 0x42, 0x57, 0xfa, 0x25, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// ControllerClient is the client API for Controller service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type ControllerClient interface {
	ListApps(ctx context.Context, in *ListAppsRequest, opts ...grpc.CallOption) (*ListAppsResponse, error)
	GetApp(ctx context.Context, in *GetAppRequest, opts ...grpc.CallOption) (*App, error)
	UpdateApp(ctx context.Context, in *UpdateAppRequest, opts ...grpc.CallOption) (*App, error)
	GetRelease(ctx context.Context, in *GetReleaseRequest, opts ...grpc.CallOption) (*Release, error)
	ListReleases(ctx context.Context, in *ListReleasesRequest, opts ...grpc.CallOption) (*ListReleasesResponse, error)
	StreamAppLog(ctx context.Context, in *StreamAppLogRequest, opts ...grpc.CallOption) (Controller_StreamAppLogClient, error)
	CreateRelease(ctx context.Context, in *CreateReleaseRequest, opts ...grpc.CallOption) (*Release, error)
	CreateDeployment(ctx context.Context, in *CreateDeploymentRequest, opts ...grpc.CallOption) (Controller_CreateDeploymentClient, error)
	StreamEvents(ctx context.Context, in *StreamEventsRequest, opts ...grpc.CallOption) (Controller_StreamEventsClient, error)
}

type controllerClient struct {
	cc *grpc.ClientConn
}

func NewControllerClient(cc *grpc.ClientConn) ControllerClient {
	return &controllerClient{cc}
}

func (c *controllerClient) ListApps(ctx context.Context, in *ListAppsRequest, opts ...grpc.CallOption) (*ListAppsResponse, error) {
	out := new(ListAppsResponse)
	err := c.cc.Invoke(ctx, "/controller.Controller/ListApps", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *controllerClient) GetApp(ctx context.Context, in *GetAppRequest, opts ...grpc.CallOption) (*App, error) {
	out := new(App)
	err := c.cc.Invoke(ctx, "/controller.Controller/GetApp", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *controllerClient) UpdateApp(ctx context.Context, in *UpdateAppRequest, opts ...grpc.CallOption) (*App, error) {
	out := new(App)
	err := c.cc.Invoke(ctx, "/controller.Controller/UpdateApp", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *controllerClient) GetRelease(ctx context.Context, in *GetReleaseRequest, opts ...grpc.CallOption) (*Release, error) {
	out := new(Release)
	err := c.cc.Invoke(ctx, "/controller.Controller/GetRelease", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *controllerClient) ListReleases(ctx context.Context, in *ListReleasesRequest, opts ...grpc.CallOption) (*ListReleasesResponse, error) {
	out := new(ListReleasesResponse)
	err := c.cc.Invoke(ctx, "/controller.Controller/ListReleases", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *controllerClient) StreamAppLog(ctx context.Context, in *StreamAppLogRequest, opts ...grpc.CallOption) (Controller_StreamAppLogClient, error) {
	stream, err := c.cc.NewStream(ctx, &_Controller_serviceDesc.Streams[0], "/controller.Controller/StreamAppLog", opts...)
	if err != nil {
		return nil, err
	}
	x := &controllerStreamAppLogClient{stream}
	if err := x.ClientStream.SendMsg(in); err != nil {
		return nil, err
	}
	if err := x.ClientStream.CloseSend(); err != nil {
		return nil, err
	}
	return x, nil
}

type Controller_StreamAppLogClient interface {
	Recv() (*LogChunk, error)
	grpc.ClientStream
}

type controllerStreamAppLogClient struct {
	grpc.ClientStream
}

func (x *controllerStreamAppLogClient) Recv() (*LogChunk, error) {
	m := new(LogChunk)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

func (c *controllerClient) CreateRelease(ctx context.Context, in *CreateReleaseRequest, opts ...grpc.CallOption) (*Release, error) {
	out := new(Release)
	err := c.cc.Invoke(ctx, "/controller.Controller/CreateRelease", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *controllerClient) CreateDeployment(ctx context.Context, in *CreateDeploymentRequest, opts ...grpc.CallOption) (Controller_CreateDeploymentClient, error) {
	stream, err := c.cc.NewStream(ctx, &_Controller_serviceDesc.Streams[1], "/controller.Controller/CreateDeployment", opts...)
	if err != nil {
		return nil, err
	}
	x := &controllerCreateDeploymentClient{stream}
	if err := x.ClientStream.SendMsg(in); err != nil {
		return nil, err
	}
	if err := x.ClientStream.CloseSend(); err != nil {
		return nil, err
	}
	return x, nil
}

type Controller_CreateDeploymentClient interface {
	Recv() (*Event, error)
	grpc.ClientStream
}

type controllerCreateDeploymentClient struct {
	grpc.ClientStream
}

func (x *controllerCreateDeploymentClient) Recv() (*Event, error) {
	m := new(Event)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

func (c *controllerClient) StreamEvents(ctx context.Context, in *StreamEventsRequest, opts ...grpc.CallOption) (Controller_StreamEventsClient, error) {
	stream, err := c.cc.NewStream(ctx, &_Controller_serviceDesc.Streams[2], "/controller.Controller/StreamEvents", opts...)
	if err != nil {
		return nil, err
	}
	x := &controllerStreamEventsClient{stream}
	if err := x.ClientStream.SendMsg(in); err != nil {
		return nil, err
	}
	if err := x.ClientStream.CloseSend(); err != nil {
		return nil, err
	}
	return x, nil
}

type Controller_StreamEventsClient interface {
	Recv() (*Event, error)
	grpc.ClientStream
}

type controllerStreamEventsClient struct {
	grpc.ClientStream
}

func (x *controllerStreamEventsClient) Recv() (*Event, error) {
	m := new(Event)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

// ControllerServer is the server API for Controller service.
type ControllerServer interface {
	ListApps(context.Context, *ListAppsRequest) (*ListAppsResponse, error)
	GetApp(context.Context, *GetAppRequest) (*App, error)
	UpdateApp(context.Context, *UpdateAppRequest) (*App, error)
	GetRelease(context.Context, *GetReleaseRequest) (*Release, error)
	ListReleases(context.Context, *ListReleasesRequest) (*ListReleasesResponse, error)
	StreamAppLog(*StreamAppLogRequest, Controller_StreamAppLogServer) error
	CreateRelease(context.Context, *CreateReleaseRequest) (*Release, error)
	CreateDeployment(*CreateDeploymentRequest, Controller_CreateDeploymentServer) error
	StreamEvents(*StreamEventsRequest, Controller_StreamEventsServer) error
}

func RegisterControllerServer(s *grpc.Server, srv ControllerServer) {
	s.RegisterService(&_Controller_serviceDesc, srv)
}

func _Controller_ListApps_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ListAppsRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ControllerServer).ListApps(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/controller.Controller/ListApps",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ControllerServer).ListApps(ctx, req.(*ListAppsRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Controller_GetApp_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetAppRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ControllerServer).GetApp(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/controller.Controller/GetApp",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ControllerServer).GetApp(ctx, req.(*GetAppRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Controller_UpdateApp_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UpdateAppRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ControllerServer).UpdateApp(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/controller.Controller/UpdateApp",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ControllerServer).UpdateApp(ctx, req.(*UpdateAppRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Controller_GetRelease_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetReleaseRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ControllerServer).GetRelease(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/controller.Controller/GetRelease",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ControllerServer).GetRelease(ctx, req.(*GetReleaseRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Controller_ListReleases_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ListReleasesRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ControllerServer).ListReleases(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/controller.Controller/ListReleases",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ControllerServer).ListReleases(ctx, req.(*ListReleasesRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Controller_StreamAppLog_Handler(srv interface{}, stream grpc.ServerStream) error {
	m := new(StreamAppLogRequest)
	if err := stream.RecvMsg(m); err != nil {
		return err
	}
	return srv.(ControllerServer).StreamAppLog(m, &controllerStreamAppLogServer{stream})
}

type Controller_StreamAppLogServer interface {
	Send(*LogChunk) error
	grpc.ServerStream
}

type controllerStreamAppLogServer struct {
	grpc.ServerStream
}

func (x *controllerStreamAppLogServer) Send(m *LogChunk) error {
	return x.ServerStream.SendMsg(m)
}

func _Controller_CreateRelease_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CreateReleaseRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ControllerServer).CreateRelease(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/controller.Controller/CreateRelease",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ControllerServer).CreateRelease(ctx, req.(*CreateReleaseRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Controller_CreateDeployment_Handler(srv interface{}, stream grpc.ServerStream) error {
	m := new(CreateDeploymentRequest)
	if err := stream.RecvMsg(m); err != nil {
		return err
	}
	return srv.(ControllerServer).CreateDeployment(m, &controllerCreateDeploymentServer{stream})
}

type Controller_CreateDeploymentServer interface {
	Send(*Event) error
	grpc.ServerStream
}

type controllerCreateDeploymentServer struct {
	grpc.ServerStream
}

func (x *controllerCreateDeploymentServer) Send(m *Event) error {
	return x.ServerStream.SendMsg(m)
}

func _Controller_StreamEvents_Handler(srv interface{}, stream grpc.ServerStream) error {
	m := new(StreamEventsRequest)
	if err := stream.RecvMsg(m); err != nil {
		return err
	}
	return srv.(ControllerServer).StreamEvents(m, &controllerStreamEventsServer{stream})
}

type Controller_StreamEventsServer interface {
	Send(*Event) error
	grpc.ServerStream
}

type controllerStreamEventsServer struct {
	grpc.ServerStream
}

func (x *controllerStreamEventsServer) Send(m *Event) error {
	return x.ServerStream.SendMsg(m)
}

var _Controller_serviceDesc = grpc.ServiceDesc{
	ServiceName: "controller.Controller",
	HandlerType: (*ControllerServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "ListApps",
			Handler:    _Controller_ListApps_Handler,
		},
		{
			MethodName: "GetApp",
			Handler:    _Controller_GetApp_Handler,
		},
		{
			MethodName: "UpdateApp",
			Handler:    _Controller_UpdateApp_Handler,
		},
		{
			MethodName: "GetRelease",
			Handler:    _Controller_GetRelease_Handler,
		},
		{
			MethodName: "ListReleases",
			Handler:    _Controller_ListReleases_Handler,
		},
		{
			MethodName: "CreateRelease",
			Handler:    _Controller_CreateRelease_Handler,
		},
	},
	Streams: []grpc.StreamDesc{
		{
			StreamName:    "StreamAppLog",
			Handler:       _Controller_StreamAppLog_Handler,
			ServerStreams: true,
		},
		{
			StreamName:    "CreateDeployment",
			Handler:       _Controller_CreateDeployment_Handler,
			ServerStreams: true,
		},
		{
			StreamName:    "StreamEvents",
			Handler:       _Controller_StreamEvents_Handler,
			ServerStreams: true,
		},
	},
	Metadata: "controller.proto",
}
